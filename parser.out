Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    EMPTY
    MINUS_MINUS
    NULL
    PLUS_PLUS
    RETURN
    VOID

Grammar

Rule 0     S' -> START
Rule 1     START -> bloc
Rule 2     bloc -> bloc statement SEMICOLON
Rule 3     bloc -> statement SEMICOLON
Rule 4     bloc -> bloc LCOMMENT comment RCOMMENT
Rule 5     bloc -> LCOMMENT comment RCOMMENT
Rule 6     statement -> PRINT LPAREN expression RPAREN
Rule 7     statement -> PRINT LPAREN QUOT expression QUOT RPAREN
Rule 8     comment -> NAME
Rule 9     comment -> NAME SPACE comment
Rule 10    statement -> NAME EQUALS expression
Rule 11    statement -> NAME INCR
Rule 12    statement -> NAME DECR
Rule 13    statement -> NAME PLUS_EQUALS expression
Rule 14    statement -> NAME MINUS_EQUALS expression
Rule 15    statement -> NAME TIMES_EQUALS expression
Rule 16    statement -> NAME DIVIDE_EQUALS expression
Rule 17    expression -> expression MINUS expression
Rule 18    expression -> expression PLUS expression
Rule 19    expression -> expression TIMES expression
Rule 20    expression -> expression DIVIDE expression
Rule 21    expression -> LPAREN expression RPAREN
Rule 22    expression -> NUMBER
Rule 23    expression -> NAME
Rule 24    expression -> TRUE
Rule 25    expression -> FALSE
Rule 26    expression -> expression IS_SUPP expression
Rule 27    expression -> expression IS_SUPP_0R_EQUALS expression
Rule 28    expression -> expression IS_INF expression
Rule 29    expression -> expression IS_INF_OR_EQUALS expression
Rule 30    expression -> expression IS_EQUALS expression
Rule 31    expression -> expression AND expression
Rule 32    expression -> expression OR expression
Rule 33    statement -> IF LPAREN expression RPAREN LACO bloc RACO
Rule 34    statement -> IF LPAREN expression RPAREN LACO bloc RACO ELSE LACO bloc RACO
Rule 35    statement -> WHILE LPAREN expression RPAREN LACO bloc RACO
Rule 36    statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACO bloc RACO
Rule 37    args -> expression
Rule 38    args -> expression COMMA args
Rule 39    statement -> FUNCTION NAME LPAREN RPAREN LACO bloc RACO
Rule 40    statement -> FUNCTION NAME LPAREN args RPAREN LACO bloc RACO
Rule 41    statement -> NAME LPAREN RPAREN
Rule 42    statement -> NAME LPAREN args RPAREN

Terminals, with rules where they appear

AND                  : 31
COMMA                : 38
DECR                 : 12
DIVIDE               : 20
DIVIDE_EQUALS        : 16
ELSE                 : 34
EMPTY                : 
EQUALS               : 10
FALSE                : 25
FOR                  : 36
FUNCTION             : 39 40
IF                   : 33 34
INCR                 : 11
IS_EQUALS            : 30
IS_INF               : 28
IS_INF_OR_EQUALS     : 29
IS_SUPP              : 26
IS_SUPP_0R_EQUALS    : 27
LACO                 : 33 34 34 35 36 39 40
LCOMMENT             : 4 5
LPAREN               : 6 7 21 33 34 35 36 39 40 41 42
MINUS                : 17
MINUS_EQUALS         : 14
MINUS_MINUS          : 
NAME                 : 8 9 10 11 12 13 14 15 16 23 39 40 41 42
NULL                 : 
NUMBER               : 22
OR                   : 32
PLUS                 : 18
PLUS_EQUALS          : 13
PLUS_PLUS            : 
PRINT                : 6 7
QUOT                 : 7 7
RACO                 : 33 34 34 35 36 39 40
RCOMMENT             : 4 5
RETURN               : 
RPAREN               : 6 7 21 33 34 35 36 39 40 41 42
SEMICOLON            : 2 3 36 36
SPACE                : 9
TIMES                : 19
TIMES_EQUALS         : 15
TRUE                 : 24
VOID                 : 
WHILE                : 35
error                : 

Nonterminals, with rules where they appear

START                : 0
args                 : 38 40 42
bloc                 : 1 2 4 33 34 34 35 36 39 40
comment              : 4 5 9
expression           : 6 7 10 13 14 15 16 17 17 18 18 19 19 20 20 21 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 34 35 36 37 38
statement            : 2 3 36 36

Parsing method: LALR

state 0

    (0) S' -> . START
    (1) START -> . bloc
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) bloc -> . bloc LCOMMENT comment RCOMMENT
    (5) bloc -> . LCOMMENT comment RCOMMENT
    (6) statement -> . PRINT LPAREN expression RPAREN
    (7) statement -> . PRINT LPAREN QUOT expression QUOT RPAREN
    (10) statement -> . NAME EQUALS expression
    (11) statement -> . NAME INCR
    (12) statement -> . NAME DECR
    (13) statement -> . NAME PLUS_EQUALS expression
    (14) statement -> . NAME MINUS_EQUALS expression
    (15) statement -> . NAME TIMES_EQUALS expression
    (16) statement -> . NAME DIVIDE_EQUALS expression
    (33) statement -> . IF LPAREN expression RPAREN LACO bloc RACO
    (34) statement -> . IF LPAREN expression RPAREN LACO bloc RACO ELSE LACO bloc RACO
    (35) statement -> . WHILE LPAREN expression RPAREN LACO bloc RACO
    (36) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACO bloc RACO
    (39) statement -> . FUNCTION NAME LPAREN RPAREN LACO bloc RACO
    (40) statement -> . FUNCTION NAME LPAREN args RPAREN LACO bloc RACO
    (41) statement -> . NAME LPAREN RPAREN
    (42) statement -> . NAME LPAREN args RPAREN

    LCOMMENT        shift and go to state 4
    PRINT           shift and go to state 5
    NAME            shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNCTION        shift and go to state 10

    START                          shift and go to state 1
    bloc                           shift and go to state 2
    statement                      shift and go to state 3

state 1

    (0) S' -> START .



state 2

    (1) START -> bloc .
    (2) bloc -> bloc . statement SEMICOLON
    (4) bloc -> bloc . LCOMMENT comment RCOMMENT
    (6) statement -> . PRINT LPAREN expression RPAREN
    (7) statement -> . PRINT LPAREN QUOT expression QUOT RPAREN
    (10) statement -> . NAME EQUALS expression
    (11) statement -> . NAME INCR
    (12) statement -> . NAME DECR
    (13) statement -> . NAME PLUS_EQUALS expression
    (14) statement -> . NAME MINUS_EQUALS expression
    (15) statement -> . NAME TIMES_EQUALS expression
    (16) statement -> . NAME DIVIDE_EQUALS expression
    (33) statement -> . IF LPAREN expression RPAREN LACO bloc RACO
    (34) statement -> . IF LPAREN expression RPAREN LACO bloc RACO ELSE LACO bloc RACO
    (35) statement -> . WHILE LPAREN expression RPAREN LACO bloc RACO
    (36) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACO bloc RACO
    (39) statement -> . FUNCTION NAME LPAREN RPAREN LACO bloc RACO
    (40) statement -> . FUNCTION NAME LPAREN args RPAREN LACO bloc RACO
    (41) statement -> . NAME LPAREN RPAREN
    (42) statement -> . NAME LPAREN args RPAREN

    $end            reduce using rule 1 (START -> bloc .)
    LCOMMENT        shift and go to state 12
    PRINT           shift and go to state 5
    NAME            shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNCTION        shift and go to state 10

    statement                      shift and go to state 11

state 3

    (3) bloc -> statement . SEMICOLON

    SEMICOLON       shift and go to state 13


state 4

    (5) bloc -> LCOMMENT . comment RCOMMENT
    (8) comment -> . NAME
    (9) comment -> . NAME SPACE comment

    NAME            shift and go to state 15

    comment                        shift and go to state 14

state 5

    (6) statement -> PRINT . LPAREN expression RPAREN
    (7) statement -> PRINT . LPAREN QUOT expression QUOT RPAREN

    LPAREN          shift and go to state 16


state 6

    (10) statement -> NAME . EQUALS expression
    (11) statement -> NAME . INCR
    (12) statement -> NAME . DECR
    (13) statement -> NAME . PLUS_EQUALS expression
    (14) statement -> NAME . MINUS_EQUALS expression
    (15) statement -> NAME . TIMES_EQUALS expression
    (16) statement -> NAME . DIVIDE_EQUALS expression
    (41) statement -> NAME . LPAREN RPAREN
    (42) statement -> NAME . LPAREN args RPAREN

    EQUALS          shift and go to state 17
    INCR            shift and go to state 18
    DECR            shift and go to state 19
    PLUS_EQUALS     shift and go to state 20
    MINUS_EQUALS    shift and go to state 21
    TIMES_EQUALS    shift and go to state 22
    DIVIDE_EQUALS   shift and go to state 23
    LPAREN          shift and go to state 24


state 7

    (33) statement -> IF . LPAREN expression RPAREN LACO bloc RACO
    (34) statement -> IF . LPAREN expression RPAREN LACO bloc RACO ELSE LACO bloc RACO

    LPAREN          shift and go to state 25


state 8

    (35) statement -> WHILE . LPAREN expression RPAREN LACO bloc RACO

    LPAREN          shift and go to state 26


state 9

    (36) statement -> FOR . LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACO bloc RACO

    LPAREN          shift and go to state 27


state 10

    (39) statement -> FUNCTION . NAME LPAREN RPAREN LACO bloc RACO
    (40) statement -> FUNCTION . NAME LPAREN args RPAREN LACO bloc RACO

    NAME            shift and go to state 28


state 11

    (2) bloc -> bloc statement . SEMICOLON

    SEMICOLON       shift and go to state 29


state 12

    (4) bloc -> bloc LCOMMENT . comment RCOMMENT
    (8) comment -> . NAME
    (9) comment -> . NAME SPACE comment

    NAME            shift and go to state 15

    comment                        shift and go to state 30

state 13

    (3) bloc -> statement SEMICOLON .

    LCOMMENT        reduce using rule 3 (bloc -> statement SEMICOLON .)
    PRINT           reduce using rule 3 (bloc -> statement SEMICOLON .)
    NAME            reduce using rule 3 (bloc -> statement SEMICOLON .)
    IF              reduce using rule 3 (bloc -> statement SEMICOLON .)
    WHILE           reduce using rule 3 (bloc -> statement SEMICOLON .)
    FOR             reduce using rule 3 (bloc -> statement SEMICOLON .)
    FUNCTION        reduce using rule 3 (bloc -> statement SEMICOLON .)
    $end            reduce using rule 3 (bloc -> statement SEMICOLON .)
    RACO            reduce using rule 3 (bloc -> statement SEMICOLON .)


state 14

    (5) bloc -> LCOMMENT comment . RCOMMENT

    RCOMMENT        shift and go to state 31


state 15

    (8) comment -> NAME .
    (9) comment -> NAME . SPACE comment

    RCOMMENT        reduce using rule 8 (comment -> NAME .)
    SPACE           shift and go to state 32


state 16

    (6) statement -> PRINT LPAREN . expression RPAREN
    (7) statement -> PRINT LPAREN . QUOT expression QUOT RPAREN
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . NAME
    (24) expression -> . TRUE
    (25) expression -> . FALSE
    (26) expression -> . expression IS_SUPP expression
    (27) expression -> . expression IS_SUPP_0R_EQUALS expression
    (28) expression -> . expression IS_INF expression
    (29) expression -> . expression IS_INF_OR_EQUALS expression
    (30) expression -> . expression IS_EQUALS expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression

    QUOT            shift and go to state 35
    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 36
    NAME            shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 34

state 17

    (10) statement -> NAME EQUALS . expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . NAME
    (24) expression -> . TRUE
    (25) expression -> . FALSE
    (26) expression -> . expression IS_SUPP expression
    (27) expression -> . expression IS_SUPP_0R_EQUALS expression
    (28) expression -> . expression IS_INF expression
    (29) expression -> . expression IS_INF_OR_EQUALS expression
    (30) expression -> . expression IS_EQUALS expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression

    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 36
    NAME            shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 40

state 18

    (11) statement -> NAME INCR .

    SEMICOLON       reduce using rule 11 (statement -> NAME INCR .)
    RPAREN          reduce using rule 11 (statement -> NAME INCR .)


state 19

    (12) statement -> NAME DECR .

    SEMICOLON       reduce using rule 12 (statement -> NAME DECR .)
    RPAREN          reduce using rule 12 (statement -> NAME DECR .)


state 20

    (13) statement -> NAME PLUS_EQUALS . expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . NAME
    (24) expression -> . TRUE
    (25) expression -> . FALSE
    (26) expression -> . expression IS_SUPP expression
    (27) expression -> . expression IS_SUPP_0R_EQUALS expression
    (28) expression -> . expression IS_INF expression
    (29) expression -> . expression IS_INF_OR_EQUALS expression
    (30) expression -> . expression IS_EQUALS expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression

    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 36
    NAME            shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 41

state 21

    (14) statement -> NAME MINUS_EQUALS . expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . NAME
    (24) expression -> . TRUE
    (25) expression -> . FALSE
    (26) expression -> . expression IS_SUPP expression
    (27) expression -> . expression IS_SUPP_0R_EQUALS expression
    (28) expression -> . expression IS_INF expression
    (29) expression -> . expression IS_INF_OR_EQUALS expression
    (30) expression -> . expression IS_EQUALS expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression

    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 36
    NAME            shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 42

state 22

    (15) statement -> NAME TIMES_EQUALS . expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . NAME
    (24) expression -> . TRUE
    (25) expression -> . FALSE
    (26) expression -> . expression IS_SUPP expression
    (27) expression -> . expression IS_SUPP_0R_EQUALS expression
    (28) expression -> . expression IS_INF expression
    (29) expression -> . expression IS_INF_OR_EQUALS expression
    (30) expression -> . expression IS_EQUALS expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression

    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 36
    NAME            shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 43

state 23

    (16) statement -> NAME DIVIDE_EQUALS . expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . NAME
    (24) expression -> . TRUE
    (25) expression -> . FALSE
    (26) expression -> . expression IS_SUPP expression
    (27) expression -> . expression IS_SUPP_0R_EQUALS expression
    (28) expression -> . expression IS_INF expression
    (29) expression -> . expression IS_INF_OR_EQUALS expression
    (30) expression -> . expression IS_EQUALS expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression

    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 36
    NAME            shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 44

state 24

    (41) statement -> NAME LPAREN . RPAREN
    (42) statement -> NAME LPAREN . args RPAREN
    (37) args -> . expression
    (38) args -> . expression COMMA args
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . NAME
    (24) expression -> . TRUE
    (25) expression -> . FALSE
    (26) expression -> . expression IS_SUPP expression
    (27) expression -> . expression IS_SUPP_0R_EQUALS expression
    (28) expression -> . expression IS_INF expression
    (29) expression -> . expression IS_INF_OR_EQUALS expression
    (30) expression -> . expression IS_EQUALS expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression

    RPAREN          shift and go to state 45
    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 36
    NAME            shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    args                           shift and go to state 46
    expression                     shift and go to state 47

state 25

    (33) statement -> IF LPAREN . expression RPAREN LACO bloc RACO
    (34) statement -> IF LPAREN . expression RPAREN LACO bloc RACO ELSE LACO bloc RACO
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . NAME
    (24) expression -> . TRUE
    (25) expression -> . FALSE
    (26) expression -> . expression IS_SUPP expression
    (27) expression -> . expression IS_SUPP_0R_EQUALS expression
    (28) expression -> . expression IS_INF expression
    (29) expression -> . expression IS_INF_OR_EQUALS expression
    (30) expression -> . expression IS_EQUALS expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression

    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 36
    NAME            shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 48

state 26

    (35) statement -> WHILE LPAREN . expression RPAREN LACO bloc RACO
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . NAME
    (24) expression -> . TRUE
    (25) expression -> . FALSE
    (26) expression -> . expression IS_SUPP expression
    (27) expression -> . expression IS_SUPP_0R_EQUALS expression
    (28) expression -> . expression IS_INF expression
    (29) expression -> . expression IS_INF_OR_EQUALS expression
    (30) expression -> . expression IS_EQUALS expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression

    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 36
    NAME            shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 49

state 27

    (36) statement -> FOR LPAREN . statement SEMICOLON expression SEMICOLON statement RPAREN LACO bloc RACO
    (6) statement -> . PRINT LPAREN expression RPAREN
    (7) statement -> . PRINT LPAREN QUOT expression QUOT RPAREN
    (10) statement -> . NAME EQUALS expression
    (11) statement -> . NAME INCR
    (12) statement -> . NAME DECR
    (13) statement -> . NAME PLUS_EQUALS expression
    (14) statement -> . NAME MINUS_EQUALS expression
    (15) statement -> . NAME TIMES_EQUALS expression
    (16) statement -> . NAME DIVIDE_EQUALS expression
    (33) statement -> . IF LPAREN expression RPAREN LACO bloc RACO
    (34) statement -> . IF LPAREN expression RPAREN LACO bloc RACO ELSE LACO bloc RACO
    (35) statement -> . WHILE LPAREN expression RPAREN LACO bloc RACO
    (36) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACO bloc RACO
    (39) statement -> . FUNCTION NAME LPAREN RPAREN LACO bloc RACO
    (40) statement -> . FUNCTION NAME LPAREN args RPAREN LACO bloc RACO
    (41) statement -> . NAME LPAREN RPAREN
    (42) statement -> . NAME LPAREN args RPAREN

    PRINT           shift and go to state 5
    NAME            shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNCTION        shift and go to state 10

    statement                      shift and go to state 50

state 28

    (39) statement -> FUNCTION NAME . LPAREN RPAREN LACO bloc RACO
    (40) statement -> FUNCTION NAME . LPAREN args RPAREN LACO bloc RACO

    LPAREN          shift and go to state 51


state 29

    (2) bloc -> bloc statement SEMICOLON .

    LCOMMENT        reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    PRINT           reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    NAME            reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    IF              reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    WHILE           reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    FOR             reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    FUNCTION        reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    $end            reduce using rule 2 (bloc -> bloc statement SEMICOLON .)
    RACO            reduce using rule 2 (bloc -> bloc statement SEMICOLON .)


state 30

    (4) bloc -> bloc LCOMMENT comment . RCOMMENT

    RCOMMENT        shift and go to state 52


state 31

    (5) bloc -> LCOMMENT comment RCOMMENT .

    LCOMMENT        reduce using rule 5 (bloc -> LCOMMENT comment RCOMMENT .)
    PRINT           reduce using rule 5 (bloc -> LCOMMENT comment RCOMMENT .)
    NAME            reduce using rule 5 (bloc -> LCOMMENT comment RCOMMENT .)
    IF              reduce using rule 5 (bloc -> LCOMMENT comment RCOMMENT .)
    WHILE           reduce using rule 5 (bloc -> LCOMMENT comment RCOMMENT .)
    FOR             reduce using rule 5 (bloc -> LCOMMENT comment RCOMMENT .)
    FUNCTION        reduce using rule 5 (bloc -> LCOMMENT comment RCOMMENT .)
    $end            reduce using rule 5 (bloc -> LCOMMENT comment RCOMMENT .)
    RACO            reduce using rule 5 (bloc -> LCOMMENT comment RCOMMENT .)


state 32

    (9) comment -> NAME SPACE . comment
    (8) comment -> . NAME
    (9) comment -> . NAME SPACE comment

    NAME            shift and go to state 15

    comment                        shift and go to state 53

state 33

    (21) expression -> LPAREN . expression RPAREN
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . NAME
    (24) expression -> . TRUE
    (25) expression -> . FALSE
    (26) expression -> . expression IS_SUPP expression
    (27) expression -> . expression IS_SUPP_0R_EQUALS expression
    (28) expression -> . expression IS_INF expression
    (29) expression -> . expression IS_INF_OR_EQUALS expression
    (30) expression -> . expression IS_EQUALS expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression

    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 36
    NAME            shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 54

state 34

    (6) statement -> PRINT LPAREN expression . RPAREN
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (26) expression -> expression . IS_SUPP expression
    (27) expression -> expression . IS_SUPP_0R_EQUALS expression
    (28) expression -> expression . IS_INF expression
    (29) expression -> expression . IS_INF_OR_EQUALS expression
    (30) expression -> expression . IS_EQUALS expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    RPAREN          shift and go to state 55
    MINUS           shift and go to state 56
    PLUS            shift and go to state 57
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 59
    IS_SUPP         shift and go to state 60
    IS_SUPP_0R_EQUALS shift and go to state 61
    IS_INF          shift and go to state 62
    IS_INF_OR_EQUALS shift and go to state 63
    IS_EQUALS       shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66


state 35

    (7) statement -> PRINT LPAREN QUOT . expression QUOT RPAREN
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . NAME
    (24) expression -> . TRUE
    (25) expression -> . FALSE
    (26) expression -> . expression IS_SUPP expression
    (27) expression -> . expression IS_SUPP_0R_EQUALS expression
    (28) expression -> . expression IS_INF expression
    (29) expression -> . expression IS_INF_OR_EQUALS expression
    (30) expression -> . expression IS_EQUALS expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression

    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 36
    NAME            shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 67

state 36

    (22) expression -> NUMBER .

    RPAREN          reduce using rule 22 (expression -> NUMBER .)
    MINUS           reduce using rule 22 (expression -> NUMBER .)
    PLUS            reduce using rule 22 (expression -> NUMBER .)
    TIMES           reduce using rule 22 (expression -> NUMBER .)
    DIVIDE          reduce using rule 22 (expression -> NUMBER .)
    IS_SUPP         reduce using rule 22 (expression -> NUMBER .)
    IS_SUPP_0R_EQUALS reduce using rule 22 (expression -> NUMBER .)
    IS_INF          reduce using rule 22 (expression -> NUMBER .)
    IS_INF_OR_EQUALS reduce using rule 22 (expression -> NUMBER .)
    IS_EQUALS       reduce using rule 22 (expression -> NUMBER .)
    AND             reduce using rule 22 (expression -> NUMBER .)
    OR              reduce using rule 22 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 22 (expression -> NUMBER .)
    COMMA           reduce using rule 22 (expression -> NUMBER .)
    QUOT            reduce using rule 22 (expression -> NUMBER .)


state 37

    (23) expression -> NAME .

    RPAREN          reduce using rule 23 (expression -> NAME .)
    MINUS           reduce using rule 23 (expression -> NAME .)
    PLUS            reduce using rule 23 (expression -> NAME .)
    TIMES           reduce using rule 23 (expression -> NAME .)
    DIVIDE          reduce using rule 23 (expression -> NAME .)
    IS_SUPP         reduce using rule 23 (expression -> NAME .)
    IS_SUPP_0R_EQUALS reduce using rule 23 (expression -> NAME .)
    IS_INF          reduce using rule 23 (expression -> NAME .)
    IS_INF_OR_EQUALS reduce using rule 23 (expression -> NAME .)
    IS_EQUALS       reduce using rule 23 (expression -> NAME .)
    AND             reduce using rule 23 (expression -> NAME .)
    OR              reduce using rule 23 (expression -> NAME .)
    SEMICOLON       reduce using rule 23 (expression -> NAME .)
    COMMA           reduce using rule 23 (expression -> NAME .)
    QUOT            reduce using rule 23 (expression -> NAME .)


state 38

    (24) expression -> TRUE .

    RPAREN          reduce using rule 24 (expression -> TRUE .)
    MINUS           reduce using rule 24 (expression -> TRUE .)
    PLUS            reduce using rule 24 (expression -> TRUE .)
    TIMES           reduce using rule 24 (expression -> TRUE .)
    DIVIDE          reduce using rule 24 (expression -> TRUE .)
    IS_SUPP         reduce using rule 24 (expression -> TRUE .)
    IS_SUPP_0R_EQUALS reduce using rule 24 (expression -> TRUE .)
    IS_INF          reduce using rule 24 (expression -> TRUE .)
    IS_INF_OR_EQUALS reduce using rule 24 (expression -> TRUE .)
    IS_EQUALS       reduce using rule 24 (expression -> TRUE .)
    AND             reduce using rule 24 (expression -> TRUE .)
    OR              reduce using rule 24 (expression -> TRUE .)
    SEMICOLON       reduce using rule 24 (expression -> TRUE .)
    COMMA           reduce using rule 24 (expression -> TRUE .)
    QUOT            reduce using rule 24 (expression -> TRUE .)


state 39

    (25) expression -> FALSE .

    RPAREN          reduce using rule 25 (expression -> FALSE .)
    MINUS           reduce using rule 25 (expression -> FALSE .)
    PLUS            reduce using rule 25 (expression -> FALSE .)
    TIMES           reduce using rule 25 (expression -> FALSE .)
    DIVIDE          reduce using rule 25 (expression -> FALSE .)
    IS_SUPP         reduce using rule 25 (expression -> FALSE .)
    IS_SUPP_0R_EQUALS reduce using rule 25 (expression -> FALSE .)
    IS_INF          reduce using rule 25 (expression -> FALSE .)
    IS_INF_OR_EQUALS reduce using rule 25 (expression -> FALSE .)
    IS_EQUALS       reduce using rule 25 (expression -> FALSE .)
    AND             reduce using rule 25 (expression -> FALSE .)
    OR              reduce using rule 25 (expression -> FALSE .)
    SEMICOLON       reduce using rule 25 (expression -> FALSE .)
    COMMA           reduce using rule 25 (expression -> FALSE .)
    QUOT            reduce using rule 25 (expression -> FALSE .)


state 40

    (10) statement -> NAME EQUALS expression .
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (26) expression -> expression . IS_SUPP expression
    (27) expression -> expression . IS_SUPP_0R_EQUALS expression
    (28) expression -> expression . IS_INF expression
    (29) expression -> expression . IS_INF_OR_EQUALS expression
    (30) expression -> expression . IS_EQUALS expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    SEMICOLON       reduce using rule 10 (statement -> NAME EQUALS expression .)
    RPAREN          reduce using rule 10 (statement -> NAME EQUALS expression .)
    MINUS           shift and go to state 56
    PLUS            shift and go to state 57
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 59
    IS_SUPP         shift and go to state 60
    IS_SUPP_0R_EQUALS shift and go to state 61
    IS_INF          shift and go to state 62
    IS_INF_OR_EQUALS shift and go to state 63
    IS_EQUALS       shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66


state 41

    (13) statement -> NAME PLUS_EQUALS expression .
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (26) expression -> expression . IS_SUPP expression
    (27) expression -> expression . IS_SUPP_0R_EQUALS expression
    (28) expression -> expression . IS_INF expression
    (29) expression -> expression . IS_INF_OR_EQUALS expression
    (30) expression -> expression . IS_EQUALS expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    SEMICOLON       reduce using rule 13 (statement -> NAME PLUS_EQUALS expression .)
    RPAREN          reduce using rule 13 (statement -> NAME PLUS_EQUALS expression .)
    MINUS           shift and go to state 56
    PLUS            shift and go to state 57
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 59
    IS_SUPP         shift and go to state 60
    IS_SUPP_0R_EQUALS shift and go to state 61
    IS_INF          shift and go to state 62
    IS_INF_OR_EQUALS shift and go to state 63
    IS_EQUALS       shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66


state 42

    (14) statement -> NAME MINUS_EQUALS expression .
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (26) expression -> expression . IS_SUPP expression
    (27) expression -> expression . IS_SUPP_0R_EQUALS expression
    (28) expression -> expression . IS_INF expression
    (29) expression -> expression . IS_INF_OR_EQUALS expression
    (30) expression -> expression . IS_EQUALS expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    SEMICOLON       reduce using rule 14 (statement -> NAME MINUS_EQUALS expression .)
    RPAREN          reduce using rule 14 (statement -> NAME MINUS_EQUALS expression .)
    MINUS           shift and go to state 56
    PLUS            shift and go to state 57
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 59
    IS_SUPP         shift and go to state 60
    IS_SUPP_0R_EQUALS shift and go to state 61
    IS_INF          shift and go to state 62
    IS_INF_OR_EQUALS shift and go to state 63
    IS_EQUALS       shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66


state 43

    (15) statement -> NAME TIMES_EQUALS expression .
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (26) expression -> expression . IS_SUPP expression
    (27) expression -> expression . IS_SUPP_0R_EQUALS expression
    (28) expression -> expression . IS_INF expression
    (29) expression -> expression . IS_INF_OR_EQUALS expression
    (30) expression -> expression . IS_EQUALS expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    SEMICOLON       reduce using rule 15 (statement -> NAME TIMES_EQUALS expression .)
    RPAREN          reduce using rule 15 (statement -> NAME TIMES_EQUALS expression .)
    MINUS           shift and go to state 56
    PLUS            shift and go to state 57
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 59
    IS_SUPP         shift and go to state 60
    IS_SUPP_0R_EQUALS shift and go to state 61
    IS_INF          shift and go to state 62
    IS_INF_OR_EQUALS shift and go to state 63
    IS_EQUALS       shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66


state 44

    (16) statement -> NAME DIVIDE_EQUALS expression .
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (26) expression -> expression . IS_SUPP expression
    (27) expression -> expression . IS_SUPP_0R_EQUALS expression
    (28) expression -> expression . IS_INF expression
    (29) expression -> expression . IS_INF_OR_EQUALS expression
    (30) expression -> expression . IS_EQUALS expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    SEMICOLON       reduce using rule 16 (statement -> NAME DIVIDE_EQUALS expression .)
    RPAREN          reduce using rule 16 (statement -> NAME DIVIDE_EQUALS expression .)
    MINUS           shift and go to state 56
    PLUS            shift and go to state 57
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 59
    IS_SUPP         shift and go to state 60
    IS_SUPP_0R_EQUALS shift and go to state 61
    IS_INF          shift and go to state 62
    IS_INF_OR_EQUALS shift and go to state 63
    IS_EQUALS       shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66


state 45

    (41) statement -> NAME LPAREN RPAREN .

    SEMICOLON       reduce using rule 41 (statement -> NAME LPAREN RPAREN .)
    RPAREN          reduce using rule 41 (statement -> NAME LPAREN RPAREN .)


state 46

    (42) statement -> NAME LPAREN args . RPAREN

    RPAREN          shift and go to state 68


state 47

    (37) args -> expression .
    (38) args -> expression . COMMA args
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (26) expression -> expression . IS_SUPP expression
    (27) expression -> expression . IS_SUPP_0R_EQUALS expression
    (28) expression -> expression . IS_INF expression
    (29) expression -> expression . IS_INF_OR_EQUALS expression
    (30) expression -> expression . IS_EQUALS expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    RPAREN          reduce using rule 37 (args -> expression .)
    COMMA           shift and go to state 69
    MINUS           shift and go to state 56
    PLUS            shift and go to state 57
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 59
    IS_SUPP         shift and go to state 60
    IS_SUPP_0R_EQUALS shift and go to state 61
    IS_INF          shift and go to state 62
    IS_INF_OR_EQUALS shift and go to state 63
    IS_EQUALS       shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66


state 48

    (33) statement -> IF LPAREN expression . RPAREN LACO bloc RACO
    (34) statement -> IF LPAREN expression . RPAREN LACO bloc RACO ELSE LACO bloc RACO
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (26) expression -> expression . IS_SUPP expression
    (27) expression -> expression . IS_SUPP_0R_EQUALS expression
    (28) expression -> expression . IS_INF expression
    (29) expression -> expression . IS_INF_OR_EQUALS expression
    (30) expression -> expression . IS_EQUALS expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    RPAREN          shift and go to state 70
    MINUS           shift and go to state 56
    PLUS            shift and go to state 57
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 59
    IS_SUPP         shift and go to state 60
    IS_SUPP_0R_EQUALS shift and go to state 61
    IS_INF          shift and go to state 62
    IS_INF_OR_EQUALS shift and go to state 63
    IS_EQUALS       shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66


state 49

    (35) statement -> WHILE LPAREN expression . RPAREN LACO bloc RACO
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (26) expression -> expression . IS_SUPP expression
    (27) expression -> expression . IS_SUPP_0R_EQUALS expression
    (28) expression -> expression . IS_INF expression
    (29) expression -> expression . IS_INF_OR_EQUALS expression
    (30) expression -> expression . IS_EQUALS expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    RPAREN          shift and go to state 71
    MINUS           shift and go to state 56
    PLUS            shift and go to state 57
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 59
    IS_SUPP         shift and go to state 60
    IS_SUPP_0R_EQUALS shift and go to state 61
    IS_INF          shift and go to state 62
    IS_INF_OR_EQUALS shift and go to state 63
    IS_EQUALS       shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66


state 50

    (36) statement -> FOR LPAREN statement . SEMICOLON expression SEMICOLON statement RPAREN LACO bloc RACO

    SEMICOLON       shift and go to state 72


state 51

    (39) statement -> FUNCTION NAME LPAREN . RPAREN LACO bloc RACO
    (40) statement -> FUNCTION NAME LPAREN . args RPAREN LACO bloc RACO
    (37) args -> . expression
    (38) args -> . expression COMMA args
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . NAME
    (24) expression -> . TRUE
    (25) expression -> . FALSE
    (26) expression -> . expression IS_SUPP expression
    (27) expression -> . expression IS_SUPP_0R_EQUALS expression
    (28) expression -> . expression IS_INF expression
    (29) expression -> . expression IS_INF_OR_EQUALS expression
    (30) expression -> . expression IS_EQUALS expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression

    RPAREN          shift and go to state 73
    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 36
    NAME            shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    args                           shift and go to state 74
    expression                     shift and go to state 47

state 52

    (4) bloc -> bloc LCOMMENT comment RCOMMENT .

    LCOMMENT        reduce using rule 4 (bloc -> bloc LCOMMENT comment RCOMMENT .)
    PRINT           reduce using rule 4 (bloc -> bloc LCOMMENT comment RCOMMENT .)
    NAME            reduce using rule 4 (bloc -> bloc LCOMMENT comment RCOMMENT .)
    IF              reduce using rule 4 (bloc -> bloc LCOMMENT comment RCOMMENT .)
    WHILE           reduce using rule 4 (bloc -> bloc LCOMMENT comment RCOMMENT .)
    FOR             reduce using rule 4 (bloc -> bloc LCOMMENT comment RCOMMENT .)
    FUNCTION        reduce using rule 4 (bloc -> bloc LCOMMENT comment RCOMMENT .)
    $end            reduce using rule 4 (bloc -> bloc LCOMMENT comment RCOMMENT .)
    RACO            reduce using rule 4 (bloc -> bloc LCOMMENT comment RCOMMENT .)


state 53

    (9) comment -> NAME SPACE comment .

    RCOMMENT        reduce using rule 9 (comment -> NAME SPACE comment .)


state 54

    (21) expression -> LPAREN expression . RPAREN
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (26) expression -> expression . IS_SUPP expression
    (27) expression -> expression . IS_SUPP_0R_EQUALS expression
    (28) expression -> expression . IS_INF expression
    (29) expression -> expression . IS_INF_OR_EQUALS expression
    (30) expression -> expression . IS_EQUALS expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    RPAREN          shift and go to state 75
    MINUS           shift and go to state 56
    PLUS            shift and go to state 57
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 59
    IS_SUPP         shift and go to state 60
    IS_SUPP_0R_EQUALS shift and go to state 61
    IS_INF          shift and go to state 62
    IS_INF_OR_EQUALS shift and go to state 63
    IS_EQUALS       shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66


state 55

    (6) statement -> PRINT LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 6 (statement -> PRINT LPAREN expression RPAREN .)
    RPAREN          reduce using rule 6 (statement -> PRINT LPAREN expression RPAREN .)


state 56

    (17) expression -> expression MINUS . expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . NAME
    (24) expression -> . TRUE
    (25) expression -> . FALSE
    (26) expression -> . expression IS_SUPP expression
    (27) expression -> . expression IS_SUPP_0R_EQUALS expression
    (28) expression -> . expression IS_INF expression
    (29) expression -> . expression IS_INF_OR_EQUALS expression
    (30) expression -> . expression IS_EQUALS expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression

    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 36
    NAME            shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 76

state 57

    (18) expression -> expression PLUS . expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . NAME
    (24) expression -> . TRUE
    (25) expression -> . FALSE
    (26) expression -> . expression IS_SUPP expression
    (27) expression -> . expression IS_SUPP_0R_EQUALS expression
    (28) expression -> . expression IS_INF expression
    (29) expression -> . expression IS_INF_OR_EQUALS expression
    (30) expression -> . expression IS_EQUALS expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression

    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 36
    NAME            shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 77

state 58

    (19) expression -> expression TIMES . expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . NAME
    (24) expression -> . TRUE
    (25) expression -> . FALSE
    (26) expression -> . expression IS_SUPP expression
    (27) expression -> . expression IS_SUPP_0R_EQUALS expression
    (28) expression -> . expression IS_INF expression
    (29) expression -> . expression IS_INF_OR_EQUALS expression
    (30) expression -> . expression IS_EQUALS expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression

    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 36
    NAME            shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 78

state 59

    (20) expression -> expression DIVIDE . expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . NAME
    (24) expression -> . TRUE
    (25) expression -> . FALSE
    (26) expression -> . expression IS_SUPP expression
    (27) expression -> . expression IS_SUPP_0R_EQUALS expression
    (28) expression -> . expression IS_INF expression
    (29) expression -> . expression IS_INF_OR_EQUALS expression
    (30) expression -> . expression IS_EQUALS expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression

    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 36
    NAME            shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 79

state 60

    (26) expression -> expression IS_SUPP . expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . NAME
    (24) expression -> . TRUE
    (25) expression -> . FALSE
    (26) expression -> . expression IS_SUPP expression
    (27) expression -> . expression IS_SUPP_0R_EQUALS expression
    (28) expression -> . expression IS_INF expression
    (29) expression -> . expression IS_INF_OR_EQUALS expression
    (30) expression -> . expression IS_EQUALS expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression

    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 36
    NAME            shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 80

state 61

    (27) expression -> expression IS_SUPP_0R_EQUALS . expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . NAME
    (24) expression -> . TRUE
    (25) expression -> . FALSE
    (26) expression -> . expression IS_SUPP expression
    (27) expression -> . expression IS_SUPP_0R_EQUALS expression
    (28) expression -> . expression IS_INF expression
    (29) expression -> . expression IS_INF_OR_EQUALS expression
    (30) expression -> . expression IS_EQUALS expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression

    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 36
    NAME            shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 81

state 62

    (28) expression -> expression IS_INF . expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . NAME
    (24) expression -> . TRUE
    (25) expression -> . FALSE
    (26) expression -> . expression IS_SUPP expression
    (27) expression -> . expression IS_SUPP_0R_EQUALS expression
    (28) expression -> . expression IS_INF expression
    (29) expression -> . expression IS_INF_OR_EQUALS expression
    (30) expression -> . expression IS_EQUALS expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression

    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 36
    NAME            shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 82

state 63

    (29) expression -> expression IS_INF_OR_EQUALS . expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . NAME
    (24) expression -> . TRUE
    (25) expression -> . FALSE
    (26) expression -> . expression IS_SUPP expression
    (27) expression -> . expression IS_SUPP_0R_EQUALS expression
    (28) expression -> . expression IS_INF expression
    (29) expression -> . expression IS_INF_OR_EQUALS expression
    (30) expression -> . expression IS_EQUALS expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression

    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 36
    NAME            shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 83

state 64

    (30) expression -> expression IS_EQUALS . expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . NAME
    (24) expression -> . TRUE
    (25) expression -> . FALSE
    (26) expression -> . expression IS_SUPP expression
    (27) expression -> . expression IS_SUPP_0R_EQUALS expression
    (28) expression -> . expression IS_INF expression
    (29) expression -> . expression IS_INF_OR_EQUALS expression
    (30) expression -> . expression IS_EQUALS expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression

    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 36
    NAME            shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 84

state 65

    (31) expression -> expression AND . expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . NAME
    (24) expression -> . TRUE
    (25) expression -> . FALSE
    (26) expression -> . expression IS_SUPP expression
    (27) expression -> . expression IS_SUPP_0R_EQUALS expression
    (28) expression -> . expression IS_INF expression
    (29) expression -> . expression IS_INF_OR_EQUALS expression
    (30) expression -> . expression IS_EQUALS expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression

    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 36
    NAME            shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 85

state 66

    (32) expression -> expression OR . expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . NAME
    (24) expression -> . TRUE
    (25) expression -> . FALSE
    (26) expression -> . expression IS_SUPP expression
    (27) expression -> . expression IS_SUPP_0R_EQUALS expression
    (28) expression -> . expression IS_INF expression
    (29) expression -> . expression IS_INF_OR_EQUALS expression
    (30) expression -> . expression IS_EQUALS expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression

    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 36
    NAME            shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 86

state 67

    (7) statement -> PRINT LPAREN QUOT expression . QUOT RPAREN
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (26) expression -> expression . IS_SUPP expression
    (27) expression -> expression . IS_SUPP_0R_EQUALS expression
    (28) expression -> expression . IS_INF expression
    (29) expression -> expression . IS_INF_OR_EQUALS expression
    (30) expression -> expression . IS_EQUALS expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    QUOT            shift and go to state 87
    MINUS           shift and go to state 56
    PLUS            shift and go to state 57
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 59
    IS_SUPP         shift and go to state 60
    IS_SUPP_0R_EQUALS shift and go to state 61
    IS_INF          shift and go to state 62
    IS_INF_OR_EQUALS shift and go to state 63
    IS_EQUALS       shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66


state 68

    (42) statement -> NAME LPAREN args RPAREN .

    SEMICOLON       reduce using rule 42 (statement -> NAME LPAREN args RPAREN .)
    RPAREN          reduce using rule 42 (statement -> NAME LPAREN args RPAREN .)


state 69

    (38) args -> expression COMMA . args
    (37) args -> . expression
    (38) args -> . expression COMMA args
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . NAME
    (24) expression -> . TRUE
    (25) expression -> . FALSE
    (26) expression -> . expression IS_SUPP expression
    (27) expression -> . expression IS_SUPP_0R_EQUALS expression
    (28) expression -> . expression IS_INF expression
    (29) expression -> . expression IS_INF_OR_EQUALS expression
    (30) expression -> . expression IS_EQUALS expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression

    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 36
    NAME            shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 47
    args                           shift and go to state 88

state 70

    (33) statement -> IF LPAREN expression RPAREN . LACO bloc RACO
    (34) statement -> IF LPAREN expression RPAREN . LACO bloc RACO ELSE LACO bloc RACO

    LACO            shift and go to state 89


state 71

    (35) statement -> WHILE LPAREN expression RPAREN . LACO bloc RACO

    LACO            shift and go to state 90


state 72

    (36) statement -> FOR LPAREN statement SEMICOLON . expression SEMICOLON statement RPAREN LACO bloc RACO
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . NUMBER
    (23) expression -> . NAME
    (24) expression -> . TRUE
    (25) expression -> . FALSE
    (26) expression -> . expression IS_SUPP expression
    (27) expression -> . expression IS_SUPP_0R_EQUALS expression
    (28) expression -> . expression IS_INF expression
    (29) expression -> . expression IS_INF_OR_EQUALS expression
    (30) expression -> . expression IS_EQUALS expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression

    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 36
    NAME            shift and go to state 37
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    expression                     shift and go to state 91

state 73

    (39) statement -> FUNCTION NAME LPAREN RPAREN . LACO bloc RACO

    LACO            shift and go to state 92


state 74

    (40) statement -> FUNCTION NAME LPAREN args . RPAREN LACO bloc RACO

    RPAREN          shift and go to state 93


state 75

    (21) expression -> LPAREN expression RPAREN .

    RPAREN          reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    IS_SUPP         reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    IS_SUPP_0R_EQUALS reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    IS_INF          reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    IS_INF_OR_EQUALS reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    IS_EQUALS       reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    QUOT            reduce using rule 21 (expression -> LPAREN expression RPAREN .)


state 76

    (17) expression -> expression MINUS expression .
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (26) expression -> expression . IS_SUPP expression
    (27) expression -> expression . IS_SUPP_0R_EQUALS expression
    (28) expression -> expression . IS_INF expression
    (29) expression -> expression . IS_INF_OR_EQUALS expression
    (30) expression -> expression . IS_EQUALS expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    RPAREN          reduce using rule 17 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 17 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 17 (expression -> expression MINUS expression .)
    IS_SUPP         reduce using rule 17 (expression -> expression MINUS expression .)
    IS_SUPP_0R_EQUALS reduce using rule 17 (expression -> expression MINUS expression .)
    IS_INF          reduce using rule 17 (expression -> expression MINUS expression .)
    IS_INF_OR_EQUALS reduce using rule 17 (expression -> expression MINUS expression .)
    IS_EQUALS       reduce using rule 17 (expression -> expression MINUS expression .)
    AND             reduce using rule 17 (expression -> expression MINUS expression .)
    OR              reduce using rule 17 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 17 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 17 (expression -> expression MINUS expression .)
    QUOT            reduce using rule 17 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 59

  ! TIMES           [ reduce using rule 17 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression MINUS expression .) ]
  ! MINUS           [ shift and go to state 56 ]
  ! PLUS            [ shift and go to state 57 ]
  ! IS_SUPP         [ shift and go to state 60 ]
  ! IS_SUPP_0R_EQUALS [ shift and go to state 61 ]
  ! IS_INF          [ shift and go to state 62 ]
  ! IS_INF_OR_EQUALS [ shift and go to state 63 ]
  ! IS_EQUALS       [ shift and go to state 64 ]
  ! AND             [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]


state 77

    (18) expression -> expression PLUS expression .
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (26) expression -> expression . IS_SUPP expression
    (27) expression -> expression . IS_SUPP_0R_EQUALS expression
    (28) expression -> expression . IS_INF expression
    (29) expression -> expression . IS_INF_OR_EQUALS expression
    (30) expression -> expression . IS_EQUALS expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    RPAREN          reduce using rule 18 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 18 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 18 (expression -> expression PLUS expression .)
    IS_SUPP         reduce using rule 18 (expression -> expression PLUS expression .)
    IS_SUPP_0R_EQUALS reduce using rule 18 (expression -> expression PLUS expression .)
    IS_INF          reduce using rule 18 (expression -> expression PLUS expression .)
    IS_INF_OR_EQUALS reduce using rule 18 (expression -> expression PLUS expression .)
    IS_EQUALS       reduce using rule 18 (expression -> expression PLUS expression .)
    AND             reduce using rule 18 (expression -> expression PLUS expression .)
    OR              reduce using rule 18 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 18 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 18 (expression -> expression PLUS expression .)
    QUOT            reduce using rule 18 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 59

  ! TIMES           [ reduce using rule 18 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression PLUS expression .) ]
  ! MINUS           [ shift and go to state 56 ]
  ! PLUS            [ shift and go to state 57 ]
  ! IS_SUPP         [ shift and go to state 60 ]
  ! IS_SUPP_0R_EQUALS [ shift and go to state 61 ]
  ! IS_INF          [ shift and go to state 62 ]
  ! IS_INF_OR_EQUALS [ shift and go to state 63 ]
  ! IS_EQUALS       [ shift and go to state 64 ]
  ! AND             [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]


state 78

    (19) expression -> expression TIMES expression .
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (26) expression -> expression . IS_SUPP expression
    (27) expression -> expression . IS_SUPP_0R_EQUALS expression
    (28) expression -> expression . IS_INF expression
    (29) expression -> expression . IS_INF_OR_EQUALS expression
    (30) expression -> expression . IS_EQUALS expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    RPAREN          reduce using rule 19 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 19 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 19 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 19 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 19 (expression -> expression TIMES expression .)
    IS_SUPP         reduce using rule 19 (expression -> expression TIMES expression .)
    IS_SUPP_0R_EQUALS reduce using rule 19 (expression -> expression TIMES expression .)
    IS_INF          reduce using rule 19 (expression -> expression TIMES expression .)
    IS_INF_OR_EQUALS reduce using rule 19 (expression -> expression TIMES expression .)
    IS_EQUALS       reduce using rule 19 (expression -> expression TIMES expression .)
    AND             reduce using rule 19 (expression -> expression TIMES expression .)
    OR              reduce using rule 19 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 19 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 19 (expression -> expression TIMES expression .)
    QUOT            reduce using rule 19 (expression -> expression TIMES expression .)

  ! MINUS           [ shift and go to state 56 ]
  ! PLUS            [ shift and go to state 57 ]
  ! TIMES           [ shift and go to state 58 ]
  ! DIVIDE          [ shift and go to state 59 ]
  ! IS_SUPP         [ shift and go to state 60 ]
  ! IS_SUPP_0R_EQUALS [ shift and go to state 61 ]
  ! IS_INF          [ shift and go to state 62 ]
  ! IS_INF_OR_EQUALS [ shift and go to state 63 ]
  ! IS_EQUALS       [ shift and go to state 64 ]
  ! AND             [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]


state 79

    (20) expression -> expression DIVIDE expression .
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (26) expression -> expression . IS_SUPP expression
    (27) expression -> expression . IS_SUPP_0R_EQUALS expression
    (28) expression -> expression . IS_INF expression
    (29) expression -> expression . IS_INF_OR_EQUALS expression
    (30) expression -> expression . IS_EQUALS expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    RPAREN          reduce using rule 20 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 20 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 20 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 20 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 20 (expression -> expression DIVIDE expression .)
    IS_SUPP         reduce using rule 20 (expression -> expression DIVIDE expression .)
    IS_SUPP_0R_EQUALS reduce using rule 20 (expression -> expression DIVIDE expression .)
    IS_INF          reduce using rule 20 (expression -> expression DIVIDE expression .)
    IS_INF_OR_EQUALS reduce using rule 20 (expression -> expression DIVIDE expression .)
    IS_EQUALS       reduce using rule 20 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 20 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 20 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 20 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 20 (expression -> expression DIVIDE expression .)
    QUOT            reduce using rule 20 (expression -> expression DIVIDE expression .)

  ! MINUS           [ shift and go to state 56 ]
  ! PLUS            [ shift and go to state 57 ]
  ! TIMES           [ shift and go to state 58 ]
  ! DIVIDE          [ shift and go to state 59 ]
  ! IS_SUPP         [ shift and go to state 60 ]
  ! IS_SUPP_0R_EQUALS [ shift and go to state 61 ]
  ! IS_INF          [ shift and go to state 62 ]
  ! IS_INF_OR_EQUALS [ shift and go to state 63 ]
  ! IS_EQUALS       [ shift and go to state 64 ]
  ! AND             [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]


state 80

    (26) expression -> expression IS_SUPP expression .
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (26) expression -> expression . IS_SUPP expression
    (27) expression -> expression . IS_SUPP_0R_EQUALS expression
    (28) expression -> expression . IS_INF expression
    (29) expression -> expression . IS_INF_OR_EQUALS expression
    (30) expression -> expression . IS_EQUALS expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    RPAREN          reduce using rule 26 (expression -> expression IS_SUPP expression .)
    IS_SUPP         reduce using rule 26 (expression -> expression IS_SUPP expression .)
    IS_SUPP_0R_EQUALS reduce using rule 26 (expression -> expression IS_SUPP expression .)
    IS_INF          reduce using rule 26 (expression -> expression IS_SUPP expression .)
    IS_INF_OR_EQUALS reduce using rule 26 (expression -> expression IS_SUPP expression .)
    IS_EQUALS       reduce using rule 26 (expression -> expression IS_SUPP expression .)
    AND             reduce using rule 26 (expression -> expression IS_SUPP expression .)
    OR              reduce using rule 26 (expression -> expression IS_SUPP expression .)
    SEMICOLON       reduce using rule 26 (expression -> expression IS_SUPP expression .)
    COMMA           reduce using rule 26 (expression -> expression IS_SUPP expression .)
    QUOT            reduce using rule 26 (expression -> expression IS_SUPP expression .)
    MINUS           shift and go to state 56
    PLUS            shift and go to state 57
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 59

  ! MINUS           [ reduce using rule 26 (expression -> expression IS_SUPP expression .) ]
  ! PLUS            [ reduce using rule 26 (expression -> expression IS_SUPP expression .) ]
  ! TIMES           [ reduce using rule 26 (expression -> expression IS_SUPP expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression IS_SUPP expression .) ]
  ! IS_SUPP         [ shift and go to state 60 ]
  ! IS_SUPP_0R_EQUALS [ shift and go to state 61 ]
  ! IS_INF          [ shift and go to state 62 ]
  ! IS_INF_OR_EQUALS [ shift and go to state 63 ]
  ! IS_EQUALS       [ shift and go to state 64 ]
  ! AND             [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]


state 81

    (27) expression -> expression IS_SUPP_0R_EQUALS expression .
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (26) expression -> expression . IS_SUPP expression
    (27) expression -> expression . IS_SUPP_0R_EQUALS expression
    (28) expression -> expression . IS_INF expression
    (29) expression -> expression . IS_INF_OR_EQUALS expression
    (30) expression -> expression . IS_EQUALS expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    RPAREN          reduce using rule 27 (expression -> expression IS_SUPP_0R_EQUALS expression .)
    IS_SUPP         reduce using rule 27 (expression -> expression IS_SUPP_0R_EQUALS expression .)
    IS_SUPP_0R_EQUALS reduce using rule 27 (expression -> expression IS_SUPP_0R_EQUALS expression .)
    IS_INF          reduce using rule 27 (expression -> expression IS_SUPP_0R_EQUALS expression .)
    IS_INF_OR_EQUALS reduce using rule 27 (expression -> expression IS_SUPP_0R_EQUALS expression .)
    IS_EQUALS       reduce using rule 27 (expression -> expression IS_SUPP_0R_EQUALS expression .)
    AND             reduce using rule 27 (expression -> expression IS_SUPP_0R_EQUALS expression .)
    OR              reduce using rule 27 (expression -> expression IS_SUPP_0R_EQUALS expression .)
    SEMICOLON       reduce using rule 27 (expression -> expression IS_SUPP_0R_EQUALS expression .)
    COMMA           reduce using rule 27 (expression -> expression IS_SUPP_0R_EQUALS expression .)
    QUOT            reduce using rule 27 (expression -> expression IS_SUPP_0R_EQUALS expression .)
    MINUS           shift and go to state 56
    PLUS            shift and go to state 57
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 59

  ! MINUS           [ reduce using rule 27 (expression -> expression IS_SUPP_0R_EQUALS expression .) ]
  ! PLUS            [ reduce using rule 27 (expression -> expression IS_SUPP_0R_EQUALS expression .) ]
  ! TIMES           [ reduce using rule 27 (expression -> expression IS_SUPP_0R_EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression IS_SUPP_0R_EQUALS expression .) ]
  ! IS_SUPP         [ shift and go to state 60 ]
  ! IS_SUPP_0R_EQUALS [ shift and go to state 61 ]
  ! IS_INF          [ shift and go to state 62 ]
  ! IS_INF_OR_EQUALS [ shift and go to state 63 ]
  ! IS_EQUALS       [ shift and go to state 64 ]
  ! AND             [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]


state 82

    (28) expression -> expression IS_INF expression .
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (26) expression -> expression . IS_SUPP expression
    (27) expression -> expression . IS_SUPP_0R_EQUALS expression
    (28) expression -> expression . IS_INF expression
    (29) expression -> expression . IS_INF_OR_EQUALS expression
    (30) expression -> expression . IS_EQUALS expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    RPAREN          reduce using rule 28 (expression -> expression IS_INF expression .)
    IS_SUPP         reduce using rule 28 (expression -> expression IS_INF expression .)
    IS_SUPP_0R_EQUALS reduce using rule 28 (expression -> expression IS_INF expression .)
    IS_INF          reduce using rule 28 (expression -> expression IS_INF expression .)
    IS_INF_OR_EQUALS reduce using rule 28 (expression -> expression IS_INF expression .)
    IS_EQUALS       reduce using rule 28 (expression -> expression IS_INF expression .)
    AND             reduce using rule 28 (expression -> expression IS_INF expression .)
    OR              reduce using rule 28 (expression -> expression IS_INF expression .)
    SEMICOLON       reduce using rule 28 (expression -> expression IS_INF expression .)
    COMMA           reduce using rule 28 (expression -> expression IS_INF expression .)
    QUOT            reduce using rule 28 (expression -> expression IS_INF expression .)
    MINUS           shift and go to state 56
    PLUS            shift and go to state 57
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 59

  ! MINUS           [ reduce using rule 28 (expression -> expression IS_INF expression .) ]
  ! PLUS            [ reduce using rule 28 (expression -> expression IS_INF expression .) ]
  ! TIMES           [ reduce using rule 28 (expression -> expression IS_INF expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression IS_INF expression .) ]
  ! IS_SUPP         [ shift and go to state 60 ]
  ! IS_SUPP_0R_EQUALS [ shift and go to state 61 ]
  ! IS_INF          [ shift and go to state 62 ]
  ! IS_INF_OR_EQUALS [ shift and go to state 63 ]
  ! IS_EQUALS       [ shift and go to state 64 ]
  ! AND             [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]


state 83

    (29) expression -> expression IS_INF_OR_EQUALS expression .
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (26) expression -> expression . IS_SUPP expression
    (27) expression -> expression . IS_SUPP_0R_EQUALS expression
    (28) expression -> expression . IS_INF expression
    (29) expression -> expression . IS_INF_OR_EQUALS expression
    (30) expression -> expression . IS_EQUALS expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    RPAREN          reduce using rule 29 (expression -> expression IS_INF_OR_EQUALS expression .)
    IS_SUPP         reduce using rule 29 (expression -> expression IS_INF_OR_EQUALS expression .)
    IS_SUPP_0R_EQUALS reduce using rule 29 (expression -> expression IS_INF_OR_EQUALS expression .)
    IS_INF          reduce using rule 29 (expression -> expression IS_INF_OR_EQUALS expression .)
    IS_INF_OR_EQUALS reduce using rule 29 (expression -> expression IS_INF_OR_EQUALS expression .)
    IS_EQUALS       reduce using rule 29 (expression -> expression IS_INF_OR_EQUALS expression .)
    AND             reduce using rule 29 (expression -> expression IS_INF_OR_EQUALS expression .)
    OR              reduce using rule 29 (expression -> expression IS_INF_OR_EQUALS expression .)
    SEMICOLON       reduce using rule 29 (expression -> expression IS_INF_OR_EQUALS expression .)
    COMMA           reduce using rule 29 (expression -> expression IS_INF_OR_EQUALS expression .)
    QUOT            reduce using rule 29 (expression -> expression IS_INF_OR_EQUALS expression .)
    MINUS           shift and go to state 56
    PLUS            shift and go to state 57
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 59

  ! MINUS           [ reduce using rule 29 (expression -> expression IS_INF_OR_EQUALS expression .) ]
  ! PLUS            [ reduce using rule 29 (expression -> expression IS_INF_OR_EQUALS expression .) ]
  ! TIMES           [ reduce using rule 29 (expression -> expression IS_INF_OR_EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression IS_INF_OR_EQUALS expression .) ]
  ! IS_SUPP         [ shift and go to state 60 ]
  ! IS_SUPP_0R_EQUALS [ shift and go to state 61 ]
  ! IS_INF          [ shift and go to state 62 ]
  ! IS_INF_OR_EQUALS [ shift and go to state 63 ]
  ! IS_EQUALS       [ shift and go to state 64 ]
  ! AND             [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]


state 84

    (30) expression -> expression IS_EQUALS expression .
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (26) expression -> expression . IS_SUPP expression
    (27) expression -> expression . IS_SUPP_0R_EQUALS expression
    (28) expression -> expression . IS_INF expression
    (29) expression -> expression . IS_INF_OR_EQUALS expression
    (30) expression -> expression . IS_EQUALS expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    RPAREN          reduce using rule 30 (expression -> expression IS_EQUALS expression .)
    IS_SUPP         reduce using rule 30 (expression -> expression IS_EQUALS expression .)
    IS_SUPP_0R_EQUALS reduce using rule 30 (expression -> expression IS_EQUALS expression .)
    IS_INF          reduce using rule 30 (expression -> expression IS_EQUALS expression .)
    IS_INF_OR_EQUALS reduce using rule 30 (expression -> expression IS_EQUALS expression .)
    IS_EQUALS       reduce using rule 30 (expression -> expression IS_EQUALS expression .)
    AND             reduce using rule 30 (expression -> expression IS_EQUALS expression .)
    OR              reduce using rule 30 (expression -> expression IS_EQUALS expression .)
    SEMICOLON       reduce using rule 30 (expression -> expression IS_EQUALS expression .)
    COMMA           reduce using rule 30 (expression -> expression IS_EQUALS expression .)
    QUOT            reduce using rule 30 (expression -> expression IS_EQUALS expression .)
    MINUS           shift and go to state 56
    PLUS            shift and go to state 57
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 59

  ! MINUS           [ reduce using rule 30 (expression -> expression IS_EQUALS expression .) ]
  ! PLUS            [ reduce using rule 30 (expression -> expression IS_EQUALS expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> expression IS_EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression IS_EQUALS expression .) ]
  ! IS_SUPP         [ shift and go to state 60 ]
  ! IS_SUPP_0R_EQUALS [ shift and go to state 61 ]
  ! IS_INF          [ shift and go to state 62 ]
  ! IS_INF_OR_EQUALS [ shift and go to state 63 ]
  ! IS_EQUALS       [ shift and go to state 64 ]
  ! AND             [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]


state 85

    (31) expression -> expression AND expression .
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (26) expression -> expression . IS_SUPP expression
    (27) expression -> expression . IS_SUPP_0R_EQUALS expression
    (28) expression -> expression . IS_INF expression
    (29) expression -> expression . IS_INF_OR_EQUALS expression
    (30) expression -> expression . IS_EQUALS expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    RPAREN          reduce using rule 31 (expression -> expression AND expression .)
    AND             reduce using rule 31 (expression -> expression AND expression .)
    OR              reduce using rule 31 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 31 (expression -> expression AND expression .)
    COMMA           reduce using rule 31 (expression -> expression AND expression .)
    QUOT            reduce using rule 31 (expression -> expression AND expression .)
    MINUS           shift and go to state 56
    PLUS            shift and go to state 57
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 59
    IS_SUPP         shift and go to state 60
    IS_SUPP_0R_EQUALS shift and go to state 61
    IS_INF          shift and go to state 62
    IS_INF_OR_EQUALS shift and go to state 63
    IS_EQUALS       shift and go to state 64

  ! MINUS           [ reduce using rule 31 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 31 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression AND expression .) ]
  ! IS_SUPP         [ reduce using rule 31 (expression -> expression AND expression .) ]
  ! IS_SUPP_0R_EQUALS [ reduce using rule 31 (expression -> expression AND expression .) ]
  ! IS_INF          [ reduce using rule 31 (expression -> expression AND expression .) ]
  ! IS_INF_OR_EQUALS [ reduce using rule 31 (expression -> expression AND expression .) ]
  ! IS_EQUALS       [ reduce using rule 31 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 65 ]
  ! OR              [ shift and go to state 66 ]


state 86

    (32) expression -> expression OR expression .
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (26) expression -> expression . IS_SUPP expression
    (27) expression -> expression . IS_SUPP_0R_EQUALS expression
    (28) expression -> expression . IS_INF expression
    (29) expression -> expression . IS_INF_OR_EQUALS expression
    (30) expression -> expression . IS_EQUALS expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    RPAREN          reduce using rule 32 (expression -> expression OR expression .)
    OR              reduce using rule 32 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 32 (expression -> expression OR expression .)
    COMMA           reduce using rule 32 (expression -> expression OR expression .)
    QUOT            reduce using rule 32 (expression -> expression OR expression .)
    MINUS           shift and go to state 56
    PLUS            shift and go to state 57
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 59
    IS_SUPP         shift and go to state 60
    IS_SUPP_0R_EQUALS shift and go to state 61
    IS_INF          shift and go to state 62
    IS_INF_OR_EQUALS shift and go to state 63
    IS_EQUALS       shift and go to state 64
    AND             shift and go to state 65

  ! MINUS           [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! IS_SUPP         [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! IS_SUPP_0R_EQUALS [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! IS_INF          [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! IS_INF_OR_EQUALS [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! IS_EQUALS       [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 66 ]


state 87

    (7) statement -> PRINT LPAREN QUOT expression QUOT . RPAREN

    RPAREN          shift and go to state 94


state 88

    (38) args -> expression COMMA args .

    RPAREN          reduce using rule 38 (args -> expression COMMA args .)


state 89

    (33) statement -> IF LPAREN expression RPAREN LACO . bloc RACO
    (34) statement -> IF LPAREN expression RPAREN LACO . bloc RACO ELSE LACO bloc RACO
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) bloc -> . bloc LCOMMENT comment RCOMMENT
    (5) bloc -> . LCOMMENT comment RCOMMENT
    (6) statement -> . PRINT LPAREN expression RPAREN
    (7) statement -> . PRINT LPAREN QUOT expression QUOT RPAREN
    (10) statement -> . NAME EQUALS expression
    (11) statement -> . NAME INCR
    (12) statement -> . NAME DECR
    (13) statement -> . NAME PLUS_EQUALS expression
    (14) statement -> . NAME MINUS_EQUALS expression
    (15) statement -> . NAME TIMES_EQUALS expression
    (16) statement -> . NAME DIVIDE_EQUALS expression
    (33) statement -> . IF LPAREN expression RPAREN LACO bloc RACO
    (34) statement -> . IF LPAREN expression RPAREN LACO bloc RACO ELSE LACO bloc RACO
    (35) statement -> . WHILE LPAREN expression RPAREN LACO bloc RACO
    (36) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACO bloc RACO
    (39) statement -> . FUNCTION NAME LPAREN RPAREN LACO bloc RACO
    (40) statement -> . FUNCTION NAME LPAREN args RPAREN LACO bloc RACO
    (41) statement -> . NAME LPAREN RPAREN
    (42) statement -> . NAME LPAREN args RPAREN

    LCOMMENT        shift and go to state 4
    PRINT           shift and go to state 5
    NAME            shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNCTION        shift and go to state 10

    bloc                           shift and go to state 95
    statement                      shift and go to state 3

state 90

    (35) statement -> WHILE LPAREN expression RPAREN LACO . bloc RACO
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) bloc -> . bloc LCOMMENT comment RCOMMENT
    (5) bloc -> . LCOMMENT comment RCOMMENT
    (6) statement -> . PRINT LPAREN expression RPAREN
    (7) statement -> . PRINT LPAREN QUOT expression QUOT RPAREN
    (10) statement -> . NAME EQUALS expression
    (11) statement -> . NAME INCR
    (12) statement -> . NAME DECR
    (13) statement -> . NAME PLUS_EQUALS expression
    (14) statement -> . NAME MINUS_EQUALS expression
    (15) statement -> . NAME TIMES_EQUALS expression
    (16) statement -> . NAME DIVIDE_EQUALS expression
    (33) statement -> . IF LPAREN expression RPAREN LACO bloc RACO
    (34) statement -> . IF LPAREN expression RPAREN LACO bloc RACO ELSE LACO bloc RACO
    (35) statement -> . WHILE LPAREN expression RPAREN LACO bloc RACO
    (36) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACO bloc RACO
    (39) statement -> . FUNCTION NAME LPAREN RPAREN LACO bloc RACO
    (40) statement -> . FUNCTION NAME LPAREN args RPAREN LACO bloc RACO
    (41) statement -> . NAME LPAREN RPAREN
    (42) statement -> . NAME LPAREN args RPAREN

    LCOMMENT        shift and go to state 4
    PRINT           shift and go to state 5
    NAME            shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNCTION        shift and go to state 10

    bloc                           shift and go to state 96
    statement                      shift and go to state 3

state 91

    (36) statement -> FOR LPAREN statement SEMICOLON expression . SEMICOLON statement RPAREN LACO bloc RACO
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (26) expression -> expression . IS_SUPP expression
    (27) expression -> expression . IS_SUPP_0R_EQUALS expression
    (28) expression -> expression . IS_INF expression
    (29) expression -> expression . IS_INF_OR_EQUALS expression
    (30) expression -> expression . IS_EQUALS expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    SEMICOLON       shift and go to state 97
    MINUS           shift and go to state 56
    PLUS            shift and go to state 57
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 59
    IS_SUPP         shift and go to state 60
    IS_SUPP_0R_EQUALS shift and go to state 61
    IS_INF          shift and go to state 62
    IS_INF_OR_EQUALS shift and go to state 63
    IS_EQUALS       shift and go to state 64
    AND             shift and go to state 65
    OR              shift and go to state 66


state 92

    (39) statement -> FUNCTION NAME LPAREN RPAREN LACO . bloc RACO
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) bloc -> . bloc LCOMMENT comment RCOMMENT
    (5) bloc -> . LCOMMENT comment RCOMMENT
    (6) statement -> . PRINT LPAREN expression RPAREN
    (7) statement -> . PRINT LPAREN QUOT expression QUOT RPAREN
    (10) statement -> . NAME EQUALS expression
    (11) statement -> . NAME INCR
    (12) statement -> . NAME DECR
    (13) statement -> . NAME PLUS_EQUALS expression
    (14) statement -> . NAME MINUS_EQUALS expression
    (15) statement -> . NAME TIMES_EQUALS expression
    (16) statement -> . NAME DIVIDE_EQUALS expression
    (33) statement -> . IF LPAREN expression RPAREN LACO bloc RACO
    (34) statement -> . IF LPAREN expression RPAREN LACO bloc RACO ELSE LACO bloc RACO
    (35) statement -> . WHILE LPAREN expression RPAREN LACO bloc RACO
    (36) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACO bloc RACO
    (39) statement -> . FUNCTION NAME LPAREN RPAREN LACO bloc RACO
    (40) statement -> . FUNCTION NAME LPAREN args RPAREN LACO bloc RACO
    (41) statement -> . NAME LPAREN RPAREN
    (42) statement -> . NAME LPAREN args RPAREN

    LCOMMENT        shift and go to state 4
    PRINT           shift and go to state 5
    NAME            shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNCTION        shift and go to state 10

    bloc                           shift and go to state 98
    statement                      shift and go to state 3

state 93

    (40) statement -> FUNCTION NAME LPAREN args RPAREN . LACO bloc RACO

    LACO            shift and go to state 99


state 94

    (7) statement -> PRINT LPAREN QUOT expression QUOT RPAREN .

    SEMICOLON       reduce using rule 7 (statement -> PRINT LPAREN QUOT expression QUOT RPAREN .)
    RPAREN          reduce using rule 7 (statement -> PRINT LPAREN QUOT expression QUOT RPAREN .)


state 95

    (33) statement -> IF LPAREN expression RPAREN LACO bloc . RACO
    (34) statement -> IF LPAREN expression RPAREN LACO bloc . RACO ELSE LACO bloc RACO
    (2) bloc -> bloc . statement SEMICOLON
    (4) bloc -> bloc . LCOMMENT comment RCOMMENT
    (6) statement -> . PRINT LPAREN expression RPAREN
    (7) statement -> . PRINT LPAREN QUOT expression QUOT RPAREN
    (10) statement -> . NAME EQUALS expression
    (11) statement -> . NAME INCR
    (12) statement -> . NAME DECR
    (13) statement -> . NAME PLUS_EQUALS expression
    (14) statement -> . NAME MINUS_EQUALS expression
    (15) statement -> . NAME TIMES_EQUALS expression
    (16) statement -> . NAME DIVIDE_EQUALS expression
    (33) statement -> . IF LPAREN expression RPAREN LACO bloc RACO
    (34) statement -> . IF LPAREN expression RPAREN LACO bloc RACO ELSE LACO bloc RACO
    (35) statement -> . WHILE LPAREN expression RPAREN LACO bloc RACO
    (36) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACO bloc RACO
    (39) statement -> . FUNCTION NAME LPAREN RPAREN LACO bloc RACO
    (40) statement -> . FUNCTION NAME LPAREN args RPAREN LACO bloc RACO
    (41) statement -> . NAME LPAREN RPAREN
    (42) statement -> . NAME LPAREN args RPAREN

    RACO            shift and go to state 100
    LCOMMENT        shift and go to state 12
    PRINT           shift and go to state 5
    NAME            shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNCTION        shift and go to state 10

    statement                      shift and go to state 11

state 96

    (35) statement -> WHILE LPAREN expression RPAREN LACO bloc . RACO
    (2) bloc -> bloc . statement SEMICOLON
    (4) bloc -> bloc . LCOMMENT comment RCOMMENT
    (6) statement -> . PRINT LPAREN expression RPAREN
    (7) statement -> . PRINT LPAREN QUOT expression QUOT RPAREN
    (10) statement -> . NAME EQUALS expression
    (11) statement -> . NAME INCR
    (12) statement -> . NAME DECR
    (13) statement -> . NAME PLUS_EQUALS expression
    (14) statement -> . NAME MINUS_EQUALS expression
    (15) statement -> . NAME TIMES_EQUALS expression
    (16) statement -> . NAME DIVIDE_EQUALS expression
    (33) statement -> . IF LPAREN expression RPAREN LACO bloc RACO
    (34) statement -> . IF LPAREN expression RPAREN LACO bloc RACO ELSE LACO bloc RACO
    (35) statement -> . WHILE LPAREN expression RPAREN LACO bloc RACO
    (36) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACO bloc RACO
    (39) statement -> . FUNCTION NAME LPAREN RPAREN LACO bloc RACO
    (40) statement -> . FUNCTION NAME LPAREN args RPAREN LACO bloc RACO
    (41) statement -> . NAME LPAREN RPAREN
    (42) statement -> . NAME LPAREN args RPAREN

    RACO            shift and go to state 101
    LCOMMENT        shift and go to state 12
    PRINT           shift and go to state 5
    NAME            shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNCTION        shift and go to state 10

    statement                      shift and go to state 11

state 97

    (36) statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON . statement RPAREN LACO bloc RACO
    (6) statement -> . PRINT LPAREN expression RPAREN
    (7) statement -> . PRINT LPAREN QUOT expression QUOT RPAREN
    (10) statement -> . NAME EQUALS expression
    (11) statement -> . NAME INCR
    (12) statement -> . NAME DECR
    (13) statement -> . NAME PLUS_EQUALS expression
    (14) statement -> . NAME MINUS_EQUALS expression
    (15) statement -> . NAME TIMES_EQUALS expression
    (16) statement -> . NAME DIVIDE_EQUALS expression
    (33) statement -> . IF LPAREN expression RPAREN LACO bloc RACO
    (34) statement -> . IF LPAREN expression RPAREN LACO bloc RACO ELSE LACO bloc RACO
    (35) statement -> . WHILE LPAREN expression RPAREN LACO bloc RACO
    (36) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACO bloc RACO
    (39) statement -> . FUNCTION NAME LPAREN RPAREN LACO bloc RACO
    (40) statement -> . FUNCTION NAME LPAREN args RPAREN LACO bloc RACO
    (41) statement -> . NAME LPAREN RPAREN
    (42) statement -> . NAME LPAREN args RPAREN

    PRINT           shift and go to state 5
    NAME            shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNCTION        shift and go to state 10

    statement                      shift and go to state 102

state 98

    (39) statement -> FUNCTION NAME LPAREN RPAREN LACO bloc . RACO
    (2) bloc -> bloc . statement SEMICOLON
    (4) bloc -> bloc . LCOMMENT comment RCOMMENT
    (6) statement -> . PRINT LPAREN expression RPAREN
    (7) statement -> . PRINT LPAREN QUOT expression QUOT RPAREN
    (10) statement -> . NAME EQUALS expression
    (11) statement -> . NAME INCR
    (12) statement -> . NAME DECR
    (13) statement -> . NAME PLUS_EQUALS expression
    (14) statement -> . NAME MINUS_EQUALS expression
    (15) statement -> . NAME TIMES_EQUALS expression
    (16) statement -> . NAME DIVIDE_EQUALS expression
    (33) statement -> . IF LPAREN expression RPAREN LACO bloc RACO
    (34) statement -> . IF LPAREN expression RPAREN LACO bloc RACO ELSE LACO bloc RACO
    (35) statement -> . WHILE LPAREN expression RPAREN LACO bloc RACO
    (36) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACO bloc RACO
    (39) statement -> . FUNCTION NAME LPAREN RPAREN LACO bloc RACO
    (40) statement -> . FUNCTION NAME LPAREN args RPAREN LACO bloc RACO
    (41) statement -> . NAME LPAREN RPAREN
    (42) statement -> . NAME LPAREN args RPAREN

    RACO            shift and go to state 103
    LCOMMENT        shift and go to state 12
    PRINT           shift and go to state 5
    NAME            shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNCTION        shift and go to state 10

    statement                      shift and go to state 11

state 99

    (40) statement -> FUNCTION NAME LPAREN args RPAREN LACO . bloc RACO
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) bloc -> . bloc LCOMMENT comment RCOMMENT
    (5) bloc -> . LCOMMENT comment RCOMMENT
    (6) statement -> . PRINT LPAREN expression RPAREN
    (7) statement -> . PRINT LPAREN QUOT expression QUOT RPAREN
    (10) statement -> . NAME EQUALS expression
    (11) statement -> . NAME INCR
    (12) statement -> . NAME DECR
    (13) statement -> . NAME PLUS_EQUALS expression
    (14) statement -> . NAME MINUS_EQUALS expression
    (15) statement -> . NAME TIMES_EQUALS expression
    (16) statement -> . NAME DIVIDE_EQUALS expression
    (33) statement -> . IF LPAREN expression RPAREN LACO bloc RACO
    (34) statement -> . IF LPAREN expression RPAREN LACO bloc RACO ELSE LACO bloc RACO
    (35) statement -> . WHILE LPAREN expression RPAREN LACO bloc RACO
    (36) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACO bloc RACO
    (39) statement -> . FUNCTION NAME LPAREN RPAREN LACO bloc RACO
    (40) statement -> . FUNCTION NAME LPAREN args RPAREN LACO bloc RACO
    (41) statement -> . NAME LPAREN RPAREN
    (42) statement -> . NAME LPAREN args RPAREN

    LCOMMENT        shift and go to state 4
    PRINT           shift and go to state 5
    NAME            shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNCTION        shift and go to state 10

    bloc                           shift and go to state 104
    statement                      shift and go to state 3

state 100

    (33) statement -> IF LPAREN expression RPAREN LACO bloc RACO .
    (34) statement -> IF LPAREN expression RPAREN LACO bloc RACO . ELSE LACO bloc RACO

    SEMICOLON       reduce using rule 33 (statement -> IF LPAREN expression RPAREN LACO bloc RACO .)
    RPAREN          reduce using rule 33 (statement -> IF LPAREN expression RPAREN LACO bloc RACO .)
    ELSE            shift and go to state 105


state 101

    (35) statement -> WHILE LPAREN expression RPAREN LACO bloc RACO .

    SEMICOLON       reduce using rule 35 (statement -> WHILE LPAREN expression RPAREN LACO bloc RACO .)
    RPAREN          reduce using rule 35 (statement -> WHILE LPAREN expression RPAREN LACO bloc RACO .)


state 102

    (36) statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement . RPAREN LACO bloc RACO

    RPAREN          shift and go to state 106


state 103

    (39) statement -> FUNCTION NAME LPAREN RPAREN LACO bloc RACO .

    SEMICOLON       reduce using rule 39 (statement -> FUNCTION NAME LPAREN RPAREN LACO bloc RACO .)
    RPAREN          reduce using rule 39 (statement -> FUNCTION NAME LPAREN RPAREN LACO bloc RACO .)


state 104

    (40) statement -> FUNCTION NAME LPAREN args RPAREN LACO bloc . RACO
    (2) bloc -> bloc . statement SEMICOLON
    (4) bloc -> bloc . LCOMMENT comment RCOMMENT
    (6) statement -> . PRINT LPAREN expression RPAREN
    (7) statement -> . PRINT LPAREN QUOT expression QUOT RPAREN
    (10) statement -> . NAME EQUALS expression
    (11) statement -> . NAME INCR
    (12) statement -> . NAME DECR
    (13) statement -> . NAME PLUS_EQUALS expression
    (14) statement -> . NAME MINUS_EQUALS expression
    (15) statement -> . NAME TIMES_EQUALS expression
    (16) statement -> . NAME DIVIDE_EQUALS expression
    (33) statement -> . IF LPAREN expression RPAREN LACO bloc RACO
    (34) statement -> . IF LPAREN expression RPAREN LACO bloc RACO ELSE LACO bloc RACO
    (35) statement -> . WHILE LPAREN expression RPAREN LACO bloc RACO
    (36) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACO bloc RACO
    (39) statement -> . FUNCTION NAME LPAREN RPAREN LACO bloc RACO
    (40) statement -> . FUNCTION NAME LPAREN args RPAREN LACO bloc RACO
    (41) statement -> . NAME LPAREN RPAREN
    (42) statement -> . NAME LPAREN args RPAREN

    RACO            shift and go to state 107
    LCOMMENT        shift and go to state 12
    PRINT           shift and go to state 5
    NAME            shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNCTION        shift and go to state 10

    statement                      shift and go to state 11

state 105

    (34) statement -> IF LPAREN expression RPAREN LACO bloc RACO ELSE . LACO bloc RACO

    LACO            shift and go to state 108


state 106

    (36) statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN . LACO bloc RACO

    LACO            shift and go to state 109


state 107

    (40) statement -> FUNCTION NAME LPAREN args RPAREN LACO bloc RACO .

    SEMICOLON       reduce using rule 40 (statement -> FUNCTION NAME LPAREN args RPAREN LACO bloc RACO .)
    RPAREN          reduce using rule 40 (statement -> FUNCTION NAME LPAREN args RPAREN LACO bloc RACO .)


state 108

    (34) statement -> IF LPAREN expression RPAREN LACO bloc RACO ELSE LACO . bloc RACO
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) bloc -> . bloc LCOMMENT comment RCOMMENT
    (5) bloc -> . LCOMMENT comment RCOMMENT
    (6) statement -> . PRINT LPAREN expression RPAREN
    (7) statement -> . PRINT LPAREN QUOT expression QUOT RPAREN
    (10) statement -> . NAME EQUALS expression
    (11) statement -> . NAME INCR
    (12) statement -> . NAME DECR
    (13) statement -> . NAME PLUS_EQUALS expression
    (14) statement -> . NAME MINUS_EQUALS expression
    (15) statement -> . NAME TIMES_EQUALS expression
    (16) statement -> . NAME DIVIDE_EQUALS expression
    (33) statement -> . IF LPAREN expression RPAREN LACO bloc RACO
    (34) statement -> . IF LPAREN expression RPAREN LACO bloc RACO ELSE LACO bloc RACO
    (35) statement -> . WHILE LPAREN expression RPAREN LACO bloc RACO
    (36) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACO bloc RACO
    (39) statement -> . FUNCTION NAME LPAREN RPAREN LACO bloc RACO
    (40) statement -> . FUNCTION NAME LPAREN args RPAREN LACO bloc RACO
    (41) statement -> . NAME LPAREN RPAREN
    (42) statement -> . NAME LPAREN args RPAREN

    LCOMMENT        shift and go to state 4
    PRINT           shift and go to state 5
    NAME            shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNCTION        shift and go to state 10

    bloc                           shift and go to state 110
    statement                      shift and go to state 3

state 109

    (36) statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACO . bloc RACO
    (2) bloc -> . bloc statement SEMICOLON
    (3) bloc -> . statement SEMICOLON
    (4) bloc -> . bloc LCOMMENT comment RCOMMENT
    (5) bloc -> . LCOMMENT comment RCOMMENT
    (6) statement -> . PRINT LPAREN expression RPAREN
    (7) statement -> . PRINT LPAREN QUOT expression QUOT RPAREN
    (10) statement -> . NAME EQUALS expression
    (11) statement -> . NAME INCR
    (12) statement -> . NAME DECR
    (13) statement -> . NAME PLUS_EQUALS expression
    (14) statement -> . NAME MINUS_EQUALS expression
    (15) statement -> . NAME TIMES_EQUALS expression
    (16) statement -> . NAME DIVIDE_EQUALS expression
    (33) statement -> . IF LPAREN expression RPAREN LACO bloc RACO
    (34) statement -> . IF LPAREN expression RPAREN LACO bloc RACO ELSE LACO bloc RACO
    (35) statement -> . WHILE LPAREN expression RPAREN LACO bloc RACO
    (36) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACO bloc RACO
    (39) statement -> . FUNCTION NAME LPAREN RPAREN LACO bloc RACO
    (40) statement -> . FUNCTION NAME LPAREN args RPAREN LACO bloc RACO
    (41) statement -> . NAME LPAREN RPAREN
    (42) statement -> . NAME LPAREN args RPAREN

    LCOMMENT        shift and go to state 4
    PRINT           shift and go to state 5
    NAME            shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNCTION        shift and go to state 10

    statement                      shift and go to state 3
    bloc                           shift and go to state 111

state 110

    (34) statement -> IF LPAREN expression RPAREN LACO bloc RACO ELSE LACO bloc . RACO
    (2) bloc -> bloc . statement SEMICOLON
    (4) bloc -> bloc . LCOMMENT comment RCOMMENT
    (6) statement -> . PRINT LPAREN expression RPAREN
    (7) statement -> . PRINT LPAREN QUOT expression QUOT RPAREN
    (10) statement -> . NAME EQUALS expression
    (11) statement -> . NAME INCR
    (12) statement -> . NAME DECR
    (13) statement -> . NAME PLUS_EQUALS expression
    (14) statement -> . NAME MINUS_EQUALS expression
    (15) statement -> . NAME TIMES_EQUALS expression
    (16) statement -> . NAME DIVIDE_EQUALS expression
    (33) statement -> . IF LPAREN expression RPAREN LACO bloc RACO
    (34) statement -> . IF LPAREN expression RPAREN LACO bloc RACO ELSE LACO bloc RACO
    (35) statement -> . WHILE LPAREN expression RPAREN LACO bloc RACO
    (36) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACO bloc RACO
    (39) statement -> . FUNCTION NAME LPAREN RPAREN LACO bloc RACO
    (40) statement -> . FUNCTION NAME LPAREN args RPAREN LACO bloc RACO
    (41) statement -> . NAME LPAREN RPAREN
    (42) statement -> . NAME LPAREN args RPAREN

    RACO            shift and go to state 112
    LCOMMENT        shift and go to state 12
    PRINT           shift and go to state 5
    NAME            shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNCTION        shift and go to state 10

    statement                      shift and go to state 11

state 111

    (36) statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACO bloc . RACO
    (2) bloc -> bloc . statement SEMICOLON
    (4) bloc -> bloc . LCOMMENT comment RCOMMENT
    (6) statement -> . PRINT LPAREN expression RPAREN
    (7) statement -> . PRINT LPAREN QUOT expression QUOT RPAREN
    (10) statement -> . NAME EQUALS expression
    (11) statement -> . NAME INCR
    (12) statement -> . NAME DECR
    (13) statement -> . NAME PLUS_EQUALS expression
    (14) statement -> . NAME MINUS_EQUALS expression
    (15) statement -> . NAME TIMES_EQUALS expression
    (16) statement -> . NAME DIVIDE_EQUALS expression
    (33) statement -> . IF LPAREN expression RPAREN LACO bloc RACO
    (34) statement -> . IF LPAREN expression RPAREN LACO bloc RACO ELSE LACO bloc RACO
    (35) statement -> . WHILE LPAREN expression RPAREN LACO bloc RACO
    (36) statement -> . FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACO bloc RACO
    (39) statement -> . FUNCTION NAME LPAREN RPAREN LACO bloc RACO
    (40) statement -> . FUNCTION NAME LPAREN args RPAREN LACO bloc RACO
    (41) statement -> . NAME LPAREN RPAREN
    (42) statement -> . NAME LPAREN args RPAREN

    RACO            shift and go to state 113
    LCOMMENT        shift and go to state 12
    PRINT           shift and go to state 5
    NAME            shift and go to state 6
    IF              shift and go to state 7
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    FUNCTION        shift and go to state 10

    statement                      shift and go to state 11

state 112

    (34) statement -> IF LPAREN expression RPAREN LACO bloc RACO ELSE LACO bloc RACO .

    SEMICOLON       reduce using rule 34 (statement -> IF LPAREN expression RPAREN LACO bloc RACO ELSE LACO bloc RACO .)
    RPAREN          reduce using rule 34 (statement -> IF LPAREN expression RPAREN LACO bloc RACO ELSE LACO bloc RACO .)


state 113

    (36) statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACO bloc RACO .

    SEMICOLON       reduce using rule 36 (statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACO bloc RACO .)
    RPAREN          reduce using rule 36 (statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACO bloc RACO .)

