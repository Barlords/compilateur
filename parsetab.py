
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDnonassocIS_SUPPIS_SUPP_0R_EQUALSIS_INFIS_INF_OR_EQUALSIS_EQUALSleftPLUSMINUSleftTIMESDIVIDEAND COMMA DECR DIVIDE DIVIDE_EQUALS ELSE EMPTY EQUALS FALSE FOR FUNCTION IF INCR IS_EQUALS IS_INF IS_INF_OR_EQUALS IS_SUPP IS_SUPP_0R_EQUALS LACO LPAREN MINUS MINUS_EQUALS MINUS_MINUS NAME NUMBER OR PLUS PLUS_EQUALS PLUS_PLUS PRINT PRINT_STR QUOT RACO RPAREN SEMICOLON STRING TIMES TIMES_EQUALS TRUE WHILESTART : bloc bloc : bloc statement SEMICOLON\n            | statement SEMICOLONstatement : PRINT LPAREN expression RPARENstatement : PRINT_STR LPAREN QUOT STRING QUOT RPARENstatement : NAME EQUALS expressionstatement : NAME INCR\n                | NAME DECRstatement : NAME PLUS_EQUALS expression\n                | NAME MINUS_EQUALS expression\n                | NAME TIMES_EQUALS expression\n                | NAME DIVIDE_EQUALS expressionexpression : expression MINUS expression\n\t\t\t\t| expression PLUS expression\n\t\t\t\t| expression TIMES expression\n\t\t\t\t| expression DIVIDE expressionexpression : LPAREN expression RPARENexpression : NUMBER\n                | NAMEexpression : TRUE\n                | FALSEexpression : expression IS_SUPP expression\n                | expression IS_SUPP_0R_EQUALS expression\n                | expression IS_INF expression\n                | expression IS_INF_OR_EQUALS expression\n                | expression IS_EQUALS expression\n                | expression AND expression\n                | expression OR expressionstatement : IF LPAREN expression RPAREN LACO bloc RACO\n            | IF LPAREN expression RPAREN LACO bloc RACO ELSE LACO bloc RACO statement : WHILE LPAREN expression RPAREN LACO bloc RACOstatement : FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACO bloc RACOargs : expression\n            | expression COMMA argsstatement : FUNCTION NAME LPAREN RPAREN LACO bloc RACO\n                | FUNCTION NAME LPAREN args RPAREN LACO bloc RACO'
    
_lr_action_items = {'PRINT':([0,2,12,24,26,76,77,79,83,84,85,86,87,93,97,98,99,100,],[4,4,-3,4,-2,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'PRINT_STR':([0,2,12,24,26,76,77,79,83,84,85,86,87,93,97,98,99,100,],[5,5,-3,5,-2,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'NAME':([0,2,10,12,13,15,18,19,20,21,22,23,24,26,27,42,45,46,47,48,49,50,51,52,53,54,55,59,76,77,79,81,83,84,85,86,87,93,97,98,99,100,],[6,6,25,-3,30,30,30,30,30,30,30,30,6,-2,30,30,30,30,30,30,30,30,30,30,30,30,30,30,6,6,6,30,6,6,6,6,6,6,6,6,6,6,]),'IF':([0,2,12,24,26,76,77,79,83,84,85,86,87,93,97,98,99,100,],[7,7,-3,7,-2,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'WHILE':([0,2,12,24,26,76,77,79,83,84,85,86,87,93,97,98,99,100,],[8,8,-3,8,-2,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'FOR':([0,2,12,24,26,76,77,79,83,84,85,86,87,93,97,98,99,100,],[9,9,-3,9,-2,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'FUNCTION':([0,2,12,24,26,76,77,79,83,84,85,86,87,93,97,98,99,100,],[10,10,-3,10,-2,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'$end':([1,2,12,26,],[0,-1,-3,-2,]),'SEMICOLON':([3,11,16,17,29,30,31,32,34,35,36,37,38,41,44,63,64,65,66,67,68,69,70,71,72,73,74,78,82,89,90,92,96,101,102,],[12,26,-7,-8,-18,-19,-20,-21,-6,-9,-10,-11,-12,59,-4,-17,-13,-14,-15,-16,-22,-23,-24,-25,-26,-27,-28,85,-5,-29,-31,-35,-36,-30,-32,]),'LPAREN':([4,5,7,8,9,13,15,18,19,20,21,22,23,25,27,42,45,46,47,48,49,50,51,52,53,54,55,59,81,],[13,14,22,23,24,27,27,27,27,27,27,27,27,42,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'EQUALS':([6,],[15,]),'INCR':([6,],[16,]),'DECR':([6,],[17,]),'PLUS_EQUALS':([6,],[18,]),'MINUS_EQUALS':([6,],[19,]),'TIMES_EQUALS':([6,],[20,]),'DIVIDE_EQUALS':([6,],[21,]),'RACO':([12,26,83,84,86,93,99,100,],[-3,-2,89,90,92,96,101,102,]),'NUMBER':([13,15,18,19,20,21,22,23,27,42,45,46,47,48,49,50,51,52,53,54,55,59,81,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'TRUE':([13,15,18,19,20,21,22,23,27,42,45,46,47,48,49,50,51,52,53,54,55,59,81,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'FALSE':([13,15,18,19,20,21,22,23,27,42,45,46,47,48,49,50,51,52,53,54,55,59,81,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'QUOT':([14,56,],[33,75,]),'RPAREN':([16,17,28,29,30,31,32,34,35,36,37,38,39,40,42,43,44,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,82,88,89,90,91,92,96,101,102,],[-7,-8,44,-18,-19,-20,-21,-6,-9,-10,-11,-12,57,58,60,63,-4,80,-33,-17,-13,-14,-15,-16,-22,-23,-24,-25,-26,-27,-28,82,-5,-34,-29,-31,95,-35,-36,-30,-32,]),'MINUS':([28,29,30,31,32,34,35,36,37,38,39,40,43,62,63,64,65,66,67,68,69,70,71,72,73,74,78,],[45,-18,-19,-20,-21,45,45,45,45,45,45,45,45,45,-17,-13,-14,-15,-16,45,45,45,45,45,45,45,45,]),'PLUS':([28,29,30,31,32,34,35,36,37,38,39,40,43,62,63,64,65,66,67,68,69,70,71,72,73,74,78,],[46,-18,-19,-20,-21,46,46,46,46,46,46,46,46,46,-17,-13,-14,-15,-16,46,46,46,46,46,46,46,46,]),'TIMES':([28,29,30,31,32,34,35,36,37,38,39,40,43,62,63,64,65,66,67,68,69,70,71,72,73,74,78,],[47,-18,-19,-20,-21,47,47,47,47,47,47,47,47,47,-17,47,47,-15,-16,47,47,47,47,47,47,47,47,]),'DIVIDE':([28,29,30,31,32,34,35,36,37,38,39,40,43,62,63,64,65,66,67,68,69,70,71,72,73,74,78,],[48,-18,-19,-20,-21,48,48,48,48,48,48,48,48,48,-17,48,48,-15,-16,48,48,48,48,48,48,48,48,]),'IS_SUPP':([28,29,30,31,32,34,35,36,37,38,39,40,43,62,63,64,65,66,67,68,69,70,71,72,73,74,78,],[49,-18,-19,-20,-21,49,49,49,49,49,49,49,49,49,-17,-13,-14,-15,-16,None,None,None,None,None,49,49,49,]),'IS_SUPP_0R_EQUALS':([28,29,30,31,32,34,35,36,37,38,39,40,43,62,63,64,65,66,67,68,69,70,71,72,73,74,78,],[50,-18,-19,-20,-21,50,50,50,50,50,50,50,50,50,-17,-13,-14,-15,-16,None,None,None,None,None,50,50,50,]),'IS_INF':([28,29,30,31,32,34,35,36,37,38,39,40,43,62,63,64,65,66,67,68,69,70,71,72,73,74,78,],[51,-18,-19,-20,-21,51,51,51,51,51,51,51,51,51,-17,-13,-14,-15,-16,None,None,None,None,None,51,51,51,]),'IS_INF_OR_EQUALS':([28,29,30,31,32,34,35,36,37,38,39,40,43,62,63,64,65,66,67,68,69,70,71,72,73,74,78,],[52,-18,-19,-20,-21,52,52,52,52,52,52,52,52,52,-17,-13,-14,-15,-16,None,None,None,None,None,52,52,52,]),'IS_EQUALS':([28,29,30,31,32,34,35,36,37,38,39,40,43,62,63,64,65,66,67,68,69,70,71,72,73,74,78,],[53,-18,-19,-20,-21,53,53,53,53,53,53,53,53,53,-17,-13,-14,-15,-16,None,None,None,None,None,53,53,53,]),'AND':([28,29,30,31,32,34,35,36,37,38,39,40,43,62,63,64,65,66,67,68,69,70,71,72,73,74,78,],[54,-18,-19,-20,-21,54,54,54,54,54,54,54,54,54,-17,-13,-14,-15,-16,-22,-23,-24,-25,-26,-27,54,54,]),'OR':([28,29,30,31,32,34,35,36,37,38,39,40,43,62,63,64,65,66,67,68,69,70,71,72,73,74,78,],[55,-18,-19,-20,-21,55,55,55,55,55,55,55,55,55,-17,-13,-14,-15,-16,-22,-23,-24,-25,-26,-27,-28,55,]),'COMMA':([29,30,31,32,62,63,64,65,66,67,68,69,70,71,72,73,74,],[-18,-19,-20,-21,81,-17,-13,-14,-15,-16,-22,-23,-24,-25,-26,-27,-28,]),'STRING':([33,],[56,]),'LACO':([57,58,60,80,94,95,],[76,77,79,87,97,98,]),'ELSE':([89,],[94,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'START':([0,],[1,]),'bloc':([0,76,77,79,87,97,98,],[2,83,84,86,93,99,100,]),'statement':([0,2,24,76,77,79,83,84,85,86,87,93,97,98,99,100,],[3,11,41,3,3,3,11,11,91,11,3,11,3,3,11,11,]),'expression':([13,15,18,19,20,21,22,23,27,42,45,46,47,48,49,50,51,52,53,54,55,59,81,],[28,34,35,36,37,38,39,40,43,62,64,65,66,67,68,69,70,71,72,73,74,78,62,]),'args':([42,81,],[61,88,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> START","S'",1,None,None,None),
  ('START -> bloc','START',1,'p_start','calcBase.py',109),
  ('bloc -> bloc statement SEMICOLON','bloc',3,'p_bloc','calcBase.py',116),
  ('bloc -> statement SEMICOLON','bloc',2,'p_bloc','calcBase.py',117),
  ('statement -> PRINT LPAREN expression RPAREN','statement',4,'p_statement_print','calcBase.py',124),
  ('statement -> PRINT_STR LPAREN QUOT STRING QUOT RPAREN','statement',6,'p_statement_printString','calcBase.py',128),
  ('statement -> NAME EQUALS expression','statement',3,'p_statement_assign','calcBase.py',132),
  ('statement -> NAME INCR','statement',2,'p_statement_increment_var','calcBase.py',137),
  ('statement -> NAME DECR','statement',2,'p_statement_increment_var','calcBase.py',138),
  ('statement -> NAME PLUS_EQUALS expression','statement',3,'p_statement_modif_var','calcBase.py',142),
  ('statement -> NAME MINUS_EQUALS expression','statement',3,'p_statement_modif_var','calcBase.py',143),
  ('statement -> NAME TIMES_EQUALS expression','statement',3,'p_statement_modif_var','calcBase.py',144),
  ('statement -> NAME DIVIDE_EQUALS expression','statement',3,'p_statement_modif_var','calcBase.py',145),
  ('expression -> expression MINUS expression','expression',3,'p_expression_opperation','calcBase.py',150),
  ('expression -> expression PLUS expression','expression',3,'p_expression_opperation','calcBase.py',151),
  ('expression -> expression TIMES expression','expression',3,'p_expression_opperation','calcBase.py',152),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_opperation','calcBase.py',153),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calcBase.py',157),
  ('expression -> NUMBER','expression',1,'p_expression_number','calcBase.py',161),
  ('expression -> NAME','expression',1,'p_expression_number','calcBase.py',162),
  ('expression -> TRUE','expression',1,'p_expression_bool','calcBase.py',166),
  ('expression -> FALSE','expression',1,'p_expression_bool','calcBase.py',167),
  ('expression -> expression IS_SUPP expression','expression',3,'p_expression_bool_compare','calcBase.py',174),
  ('expression -> expression IS_SUPP_0R_EQUALS expression','expression',3,'p_expression_bool_compare','calcBase.py',175),
  ('expression -> expression IS_INF expression','expression',3,'p_expression_bool_compare','calcBase.py',176),
  ('expression -> expression IS_INF_OR_EQUALS expression','expression',3,'p_expression_bool_compare','calcBase.py',177),
  ('expression -> expression IS_EQUALS expression','expression',3,'p_expression_bool_compare','calcBase.py',178),
  ('expression -> expression AND expression','expression',3,'p_expression_bool_compare','calcBase.py',179),
  ('expression -> expression OR expression','expression',3,'p_expression_bool_compare','calcBase.py',180),
  ('statement -> IF LPAREN expression RPAREN LACO bloc RACO','statement',7,'p_statement_if','calcBase.py',184),
  ('statement -> IF LPAREN expression RPAREN LACO bloc RACO ELSE LACO bloc RACO','statement',11,'p_statement_if','calcBase.py',185),
  ('statement -> WHILE LPAREN expression RPAREN LACO bloc RACO','statement',7,'p_statement_while','calcBase.py',192),
  ('statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACO bloc RACO','statement',11,'p_statement_for','calcBase.py',196),
  ('args -> expression','args',1,'p_args','calcBase.py',200),
  ('args -> expression COMMA args','args',3,'p_args','calcBase.py',201),
  ('statement -> FUNCTION NAME LPAREN RPAREN LACO bloc RACO','statement',7,'p_statement_declare_func','calcBase.py',208),
  ('statement -> FUNCTION NAME LPAREN args RPAREN LACO bloc RACO','statement',8,'p_statement_declare_func','calcBase.py',209),
]
